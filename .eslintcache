[{"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\App.js":"3","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\index.js":"4","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Home.js":"5","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Signup.js":"6","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\PrivacyPolicy.js":"7","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Faq.js":"8","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\ScrollToTop.js":"9","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductList.js":"10","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Login.js":"11","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Footer.js":"12","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\MyProfile.js":"13","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Feedback.js":"14","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Topnav.js":"15","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\customerReducer.js":"16","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\About.js":"17","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductDetails.js":"18","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Wishlist.js":"19","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Cart.js":"20","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Flavour.js":"21","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Photo.js":"22","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Profession.js":"23","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\auth.js":"24","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Designer.js":"25","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\customer.js":"26","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Ocassion.js":"27","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\LoadingCard.js":"28","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\ProductCard.js":"29","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\index.js":"30","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\WishlistProductCard.js":"31","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Offer.js":"32","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CartProductCard.js":"33","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CaetgoryCard.js":"34","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Checkout.js":"35","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CheckoutProductCard.js":"36","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\OngoingOrders.js":"37","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\PreviousOrders.js":"38","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Search.js":"39","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Promocode.js":"40"},{"size":1284,"mtime":1612891973494,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1612596551780,"results":"43","hashOfConfig":"42"},{"size":4811,"mtime":1615276907705,"results":"44","hashOfConfig":"42"},{"size":163,"mtime":1612596551780,"results":"45","hashOfConfig":"42"},{"size":4680,"mtime":1615555171933,"results":"46","hashOfConfig":"42"},{"size":8692,"mtime":1615572525643,"results":"47","hashOfConfig":"42"},{"size":750,"mtime":1612596551764,"results":"48","hashOfConfig":"42"},{"size":747,"mtime":1612596551764,"results":"49","hashOfConfig":"42"},{"size":361,"mtime":1612596551717,"results":"50","hashOfConfig":"42"},{"size":2027,"mtime":1612888628759,"results":"51","hashOfConfig":"42"},{"size":6791,"mtime":1615572452527,"results":"52","hashOfConfig":"42"},{"size":3909,"mtime":1615269783792,"results":"53","hashOfConfig":"42"},{"size":8145,"mtime":1612960157502,"results":"54","hashOfConfig":"42"},{"size":1500,"mtime":1615383440368,"results":"55","hashOfConfig":"42"},{"size":8102,"mtime":1614099959703,"results":"56","hashOfConfig":"42"},{"size":383,"mtime":1612867313120,"results":"57","hashOfConfig":"42"},{"size":674,"mtime":1612596551764,"results":"58","hashOfConfig":"42"},{"size":14162,"mtime":1615448794799,"results":"59","hashOfConfig":"42"},{"size":2691,"mtime":1613026659888,"results":"60","hashOfConfig":"42"},{"size":4834,"mtime":1615400513806,"results":"61","hashOfConfig":"42"},{"size":2799,"mtime":1612723303063,"results":"62","hashOfConfig":"42"},{"size":1722,"mtime":1612722520445,"results":"63","hashOfConfig":"42"},{"size":1770,"mtime":1612719606011,"results":"64","hashOfConfig":"42"},{"size":791,"mtime":1612596551733,"results":"65","hashOfConfig":"42"},{"size":1739,"mtime":1612722447529,"results":"66","hashOfConfig":"42"},{"size":5373,"mtime":1615390419529,"results":"67","hashOfConfig":"42"},{"size":1745,"mtime":1612719479923,"results":"68","hashOfConfig":"42"},{"size":470,"mtime":1612596551717,"results":"69","hashOfConfig":"42"},{"size":3578,"mtime":1612873926535,"results":"70","hashOfConfig":"42"},{"size":1957,"mtime":1615277069741,"results":"71","hashOfConfig":"42"},{"size":10744,"mtime":1613034899383,"results":"72","hashOfConfig":"42"},{"size":2145,"mtime":1612720149506,"results":"73","hashOfConfig":"42"},{"size":19366,"mtime":1613035951879,"results":"74","hashOfConfig":"42"},{"size":832,"mtime":1612851734626,"results":"75","hashOfConfig":"42"},{"size":18575,"mtime":1615555585480,"results":"76","hashOfConfig":"42"},{"size":770,"mtime":1612965429844,"results":"77","hashOfConfig":"42"},{"size":3126,"mtime":1615446934799,"results":"78","hashOfConfig":"42"},{"size":2299,"mtime":1615570889014,"results":"79","hashOfConfig":"42"},{"size":2934,"mtime":1615447279034,"results":"80","hashOfConfig":"42"},{"size":753,"mtime":1615277900774,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1xoodf1",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\index.js",[],["168","169"],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\App.js",["170","171"],"import \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { getCartDetails } from \"./functions/customer\";\r\nimport { lazy, Suspense, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getWishlist } from \"./functions/customer\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Home = lazy(() => import(\"./pages/Home\"));\r\nconst Login = lazy(() => import(\"./pages/Login\"));\r\nconst Signup = lazy(() => import(\"./pages/Signup\"));\r\nconst Faq = lazy(() => import(\"./pages/Faq\"));\r\nconst PrivacyPolicy = lazy(() => import(\"./pages/PrivacyPolicy\"));\r\nconst About = lazy(() => import(\"./pages/About\"));\r\nconst Feedback = lazy(() => import(\"./pages/Feedback\"));\r\nconst ProductList = lazy(() => import(\"./pages/ProductList\"));\r\nconst ProductDetails = lazy(() => import(\"./pages/ProductDetails\"));\r\nconst MyProfile = lazy(() => import(\"./pages/customer/MyProfile\"));\r\nconst Cart = lazy(() => import(\"./pages/customer/Cart\"));\r\nconst Wishlist = lazy(() => import(\"./pages/customer/Wishlist\"));\r\nconst Checkout = lazy(() => import(\"./pages/customer/Checkout\"));\r\nconst OngoingOrders = lazy(() => import(\"./pages/customer/OngoingOrders\"));\r\nconst PreviousOrders = lazy(() => import(\"./pages/customer/PreviousOrders\"));\r\nconst Search = lazy(() => import(\"./pages/Search\"));\r\nconst ScrollToTop = lazy(() => import(\"./components/ScrollToTop\"));\r\nconst Topnav = lazy(() => import(\"./components/nav/Topnav\"));\r\nconst Footer = lazy(() => import(\"./components/nav/Footer\"));\r\nconst Promocode = lazy(() => import(\"./pages/Promocode\"));\r\n\r\nfunction App() {\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (customer) {\r\n      const loadCartItemss = () =>\r\n        getCartDetails(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: res.data.cart_items },\r\n              });\r\n            } else\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: undefined },\r\n              });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n      loadCartItemss();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (customer) {\r\n      getWishlist(customer.token).then((res) => {\r\n        if (res.data.success === \"1\")\r\n          dispatch({\r\n            type: \"GET_WISHLIST\",\r\n            payload: { ...customer, wishlist: res.data.fav_items },\r\n          });\r\n        else\r\n          dispatch({\r\n            type: \"GET_WISHLIST\",\r\n            payload: { ...customer, wishlist: undefined },\r\n          });\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense\r\n        fallback={\r\n          <div className=\"loading-container\">\r\n            <div\r\n              className=\"loader\"\r\n              style={{ fontSize: \"48px\", color: \"#cb202d\" }}\r\n            >\r\n              <LoadingOutlined />\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <ToastContainer />\r\n        <ScrollToTop />\r\n        <header className=\"App-header\">\r\n          <Topnav />\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n          <Route exact path=\"/faq\" component={Faq} />\r\n          <Route exact path=\"/feedback\" component={Feedback} />\r\n          <Route exact path=\"/product-list/:slug\" component={ProductList} />\r\n          <Route\r\n            exact\r\n            path=\"/product-details/:slug\"\r\n            component={ProductDetails}\r\n          />\r\n          <Route exact path=\"/user/profile\" component={MyProfile} />\r\n          <Route exact path=\"/user/cart\" component={Cart} />\r\n          <Route exact path=\"/user/wishlist\" component={Wishlist} />\r\n          <Route exact path=\"/user/checkout\" component={Checkout} />\r\n          <Route exact path=\"/user/ongoing-orders\" component={OngoingOrders} />\r\n          <Route\r\n            exact\r\n            path=\"/user/previous-orders\"\r\n            component={PreviousOrders}\r\n          />\r\n          <Route exact path=\"/search/:keyword\" component={Search} />\r\n          <Route exact path=\"/promocode\" component={Promocode} />\r\n        </Switch>\r\n        <Footer />\r\n        <div className=\"space\"></div>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\index.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Home.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Signup.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\PrivacyPolicy.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Faq.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\ScrollToTop.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductList.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Login.js",["172"],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Footer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\MyProfile.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Feedback.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Topnav.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\customerReducer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\About.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductDetails.js",["173"],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getIndividualProduct } from \"../functions/index\";\r\nimport LoadingCard from \"../components/cards/LoadingCard\";\r\nimport { getFlavours, getProductsByCategory } from \"../functions/index\";\r\nimport { addToCart } from \"../functions/customer\";\r\nimport ProductCard from \"../components/cards/ProductCard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCartDetails, addToWishlist } from \"../functions/customer\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst ProductDetails = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n  const [flavours, setFlavours] = useState([]);\r\n  const [flavour, setFlavour] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [weight, setWeight] = useState(0);\r\n  const [discountedPrice, setDiscountedPrice] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const { slug } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  const loadFlavours = () => {\r\n    setLoading(true);\r\n    getFlavours()\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.success === \"1\") setFlavours(res.data.All_Flavours);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => loadFlavours(), []);\r\n\r\n  const loadProducts = (c) => {\r\n    setLoading(true);\r\n    getProductsByCategory(\r\n      c === \"Wedding & Anniversary\" || c === \"Wedding & Anniversary \"\r\n        ? \"Wedding%20%26%20Anniversary%20\"\r\n        : c\r\n    )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.success === \"1\") setProducts(res.data.Products);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadProduct = () => {\r\n      setLoading(true);\r\n      getIndividualProduct(slug)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.data.success === \"1\") {\r\n            setProduct(res.data.Product);\r\n            setWeight(res.data.Product.weight);\r\n            loadProducts(res.data.Product.category);\r\n            setFlavour(res.data.Product.flavour);\r\n            setDiscountedPrice(res.data.Product.discounted_price);\r\n            setPrice(res.data.Product.price);\r\n            setDiscount(\r\n              Math.round(\r\n                100 -\r\n                  (res.data.Product.discounted_price / res.data.Product.price) *\r\n                    100\r\n              )\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    loadProduct();\r\n  }, [slug]);\r\n\r\n  const increaseWeight = () => {\r\n    if (weight < 10) {\r\n      setDiscountedPrice((discountedPrice / weight) * (weight + 1));\r\n      setPrice(\r\n        (discountedPrice / weight) * (weight + 1) * (100 / (100 - discount))\r\n      );\r\n      setWeight(weight + 1);\r\n    }\r\n  };\r\n  const decreaseWeight = () => {\r\n    if (weight > product.weight) {\r\n      setDiscountedPrice((discountedPrice / weight) * (weight - 1));\r\n      setPrice(\r\n        (discountedPrice / weight) * (weight - 1) * (100 / (100 - discount))\r\n      );\r\n      setWeight(weight - 1);\r\n    }\r\n  };\r\n\r\n  const addItemToCart = () => {\r\n    if (customer && customer.token) {\r\n      addToCart(\r\n        product.product_id,\r\n        flavour,\r\n        weight,\r\n        discountedPrice,\r\n        customer.token\r\n      )\r\n        .then((res) => {\r\n          if (res.data.success === \"1\") {\r\n            toast.success(\"Item added to cart\");\r\n            getCartDetails(customer.token)\r\n              .then((response) => {\r\n                if (response.data.success === \"1\")\r\n                  dispatch({\r\n                    type: \"GET_CART\",\r\n                    payload: {\r\n                      ...customer,\r\n                      cartItems: response.data.cart_items,\r\n                    },\r\n                  });\r\n              })\r\n              .catch((err) => console.log(err));\r\n          } else if (\r\n            res.data.success === \"0\" &&\r\n            res.data.message === \"Item already in cart\"\r\n          )\r\n            toast.error(\"Item already in the cart\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      history.push({\r\n        pathname: \"/login\",\r\n        state: { from: history.location.pathname },\r\n      });\r\n    }\r\n  };\r\n\r\n  const fruit = 280;\r\n  const blackForest = 280;\r\n  const coffeeMocha = 290;\r\n  const truffle = 330;\r\n  const chocolateOrange = 330;\r\n  const blueberryChocolate = 330;\r\n  const hazelnut = 580;\r\n  const whiteForest = 290;\r\n  const tiramisu = 430;\r\n  const redVelvetTruffle = 330;\r\n  const oreo = 310;\r\n  const pineapple = 230;\r\n  const strawberry = 250;\r\n  const redVelvet = 280;\r\n  const redVelvetCheeseCream = 480;\r\n  const cookieAndCream = 310;\r\n  const butterscotch = 250;\r\n  const chocolate = 280;\r\n  const chocolateVanilla = 330;\r\n  const blueberry = 310;\r\n  const hazelnutCoffee = 580;\r\n\r\n  const calculatePrice = (e) => {\r\n    let old, newOne;\r\n    /*Setting the old cream + flavour price */\r\n    if (flavour === \"chocolate\") old = chocolate;\r\n    else if (flavour === \"truffle\") old = truffle;\r\n    else if (flavour === \"hazelnut\") old = hazelnut;\r\n    else if (flavour === \"red velvet\") old = redVelvet;\r\n    else if (flavour === \"fruit\") old = fruit;\r\n    else if (flavour === \"coffee mocha\") old = coffeeMocha;\r\n    else if (flavour === \"black forest\") old = blackForest;\r\n    else if (flavour === \"blueberry\") old = blueberry;\r\n    else if (flavour === \"tiramisu\") old = tiramisu;\r\n    else if (flavour === \"butterscotch\") old = butterscotch;\r\n    else if (flavour === \"cookie & cream\") old = cookieAndCream;\r\n    else if (flavour === \"pineapple\") old = pineapple;\r\n    else if (flavour === \"chocolate vanilla\") old = chocolateVanilla;\r\n    else if (flavour === \"oreo\") old = oreo;\r\n    else if (flavour === \"red velvet truffle\") old = redVelvetTruffle;\r\n    else if (flavour === \"white forest\") old = whiteForest;\r\n    else if (flavour === \"strawberry\") old = strawberry;\r\n    else if (flavour === \"red velvet cream cheese\") old = redVelvetCheeseCream;\r\n    else if (flavour === \"hazelnut coffee\") old = hazelnutCoffee;\r\n    else if (flavour === \"blueberry chocolate\") old = blueberryChocolate;\r\n    else if (flavour === \"chocolate orange\") old = chocolateOrange;\r\n\r\n    /*Setting the old cream + flavour price */\r\n    if (e.target.value === \"chocolate\") newOne = chocolate;\r\n    else if (e.target.value === \"truffle\") newOne = truffle;\r\n    else if (e.target.value === \"hazelnut\") newOne = hazelnut;\r\n    else if (e.target.value === \"red velvet\") newOne = redVelvet;\r\n    else if (e.target.value === \"fruit\") newOne = fruit;\r\n    else if (e.target.value === \"coffee mocha\") newOne = coffeeMocha;\r\n    else if (e.target.value === \"black forest\") newOne = blackForest;\r\n    else if (e.target.value === \"blueberry\") newOne = blueberry;\r\n    else if (e.target.value === \"tiramisu\") newOne = tiramisu;\r\n    else if (e.target.value === \"butterscotch\") newOne = butterscotch;\r\n    else if (e.target.value === \"cookie & cream\") newOne = cookieAndCream;\r\n    else if (e.target.value === \"pineapple\") newOne = pineapple;\r\n    else if (e.target.value === \"chocolate vanilla\") newOne = chocolateVanilla;\r\n    else if (e.target.value === \"oreo\") newOne = oreo;\r\n    else if (e.target.value === \"red velvet truffle\") newOne = redVelvetTruffle;\r\n    else if (e.target.value === \"white forest\") newOne = whiteForest;\r\n    else if (e.target.value === \"strawberry\") newOne = strawberry;\r\n    else if (e.target.value === \"red velvet cream cheese\")\r\n      newOne = redVelvetCheeseCream;\r\n    else if (e.target.value === \"hazelnut coffee\") newOne = hazelnutCoffee;\r\n    else if (e.target.value === \"blueberry chocolate\")\r\n      newOne = blueberryChocolate;\r\n    else if (e.target.value === \"chocolate orange\") newOne = chocolateOrange;\r\n\r\n    setFlavour(e.target.value);\r\n    setDiscountedPrice((discountedPrice / weight - old + newOne) * weight);\r\n    setPrice(\r\n      (discountedPrice / weight - old + newOne) *\r\n        weight *\r\n        (100 / (100 - discount))\r\n    );\r\n  };\r\n\r\n  const addItemToWishlist = () => {\r\n    addToWishlist(product.product_id, weight, customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") toast.success(\"Item added to wishlist\");\r\n        else if (\r\n          res.data.success === \"0\" &&\r\n          res.data.message === \"item already in favourites\"\r\n        )\r\n          toast.info(\"Item already in wishlist\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n        className=\"image-modal\"\r\n      >\r\n        <img\r\n          src={\r\n            product.prof_img ? \"https://cakewaale.com\" + product.prof_img : \"\"\r\n          }\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Modal>\r\n      <h2 className=\"section-title\">Cake Details</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 p-md-3 p-lg-5\">\r\n            <div>\r\n              {loading ? (\r\n                <LoadingCard count={1} classValue=\"product-detail-image\" />\r\n              ) : (\r\n                <div className=\"product-image-container\">\r\n                  <img\r\n                    src={\r\n                      product.prof_img\r\n                        ? \"https://cakewaale.com\" + product.prof_img\r\n                        : \"\"\r\n                    }\r\n                    alt=\"cake\"\r\n                    className=\"product-detail-image pointer\"\r\n                    onClick={showModal}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 pt-lg-5 pt-md-3 product-details\">\r\n            {loading ? (\r\n              <LoadingCard count={1} classValue=\"\" />\r\n            ) : (\r\n              <>\r\n                <h3 className=\"mb-lg-3 mb-md-2 mb-sm-1 product-detail-title\">\r\n                  {product.product_name}\r\n                  <div className=\"price-details\">\r\n                    <span className=\"discounted-price\">\r\n                      ₹{Math.round(discountedPrice)}{\" \"}\r\n                    </span>\r\n                    <span className=\"original-price\">\r\n                      {\" \"}\r\n                      ₹{Math.round(price)}\r\n                    </span>\r\n                    {product.discount && (\r\n                      <span className=\"float-right discount\">\r\n                        {product.discount}% off\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </h3>\r\n\r\n                <label className=\"product-flavour-select\">Select Flavour</label>\r\n                <select\r\n                  className=\"form-control mb-1\"\r\n                  value={flavour}\r\n                  onChange={calculatePrice}\r\n                >\r\n                  {flavours.map((item) => (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <label className=\"product-weight-select\">Select Weight</label>\r\n                <div className=\"mb-5\">\r\n                  <button\r\n                    className=\"plus-icon pointer\"\r\n                    onClick={increaseWeight}\r\n                  >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                  </button>\r\n                  <span className=\"pound\">{weight} Pounds</span>\r\n                  <button\r\n                    className=\"minus-icon pointer\"\r\n                    onClick={decreaseWeight}\r\n                  >\r\n                    <i className=\"fa fa-minus\"></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <button\r\n                  className=\"btn my-btn-primary btn-block\"\r\n                  onClick={addItemToCart}\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n                <br />\r\n                <button\r\n                  className=\"btn my-btn-secondary btn-block\"\r\n                  onClick={addItemToWishlist}\r\n                >\r\n                  Move to wishlist\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <h2 className=\"section-title\">View Similar Cakes</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row section-row\">\r\n          {loading ? (\r\n            <LoadingCard\r\n              count={4}\r\n              classValue=\"col-6 col-md-4 col-lg-3 p-1 product-card-wrapper\"\r\n            />\r\n          ) : (\r\n            products.length > 0 &&\r\n            products\r\n              .filter(\r\n                (item, i) => i < 8 && item.product_id !== product.product_id\r\n              )\r\n              .map((item, i) => (\r\n                <div\r\n                  className=\"col-6 col-md-4 col-lg-3 p-1 product-card-wrapper\"\r\n                  key={i}\r\n                >\r\n                  <ProductCard\r\n                    name={item.product_name}\r\n                    img={item.prof_img}\r\n                    id={item.product_id}\r\n                    discountedPrice={item.discounted_price}\r\n                    discount={item.offer}\r\n                    price={item.price}\r\n                    weight={item.weight}\r\n                  />\r\n                </div>\r\n              ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Wishlist.js",["174"],"import WishlistProductCard from \"../../components/cards/WishlistProductCard\";\r\nimport { getWishlist } from \"../../functions/customer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmptyWishlist from \"../../images/empty-wishlist.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Wishlist = ({ history }) => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!(customer && customer.token)) {\r\n      toast.error(\"Log in to view your wishlist\");\r\n\r\n      history.push(\"/login\");\r\n    }\r\n  }, [customer, history]);\r\n\r\n  const loadWishlist = () => {\r\n    getWishlist(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") setWishlist(res.data.fav_items);\r\n        else setWishlist([]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customer) {\r\n      const loadWishlists = () => {\r\n        getWishlist(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              setWishlist(res.data.fav_items);\r\n\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: res.data.fav_items },\r\n              });\r\n            } else {\r\n              setWishlist([]);\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: undefined },\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      };\r\n      loadWishlists();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\"> My Wishlist ({wishlist.length} items)</h2>\r\n      {wishlist.length === 0 && (\r\n        <>\r\n          <div className=\"empty-wishlist-image\">\r\n            <img\r\n              src={EmptyWishlist}\r\n              alt=\"Empty Cart\"\r\n              style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n            />\r\n          </div>\r\n          <h4 className=\"text-center\">Your Wishlist is empty</h4>\r\n        </>\r\n      )}\r\n      {wishlist.length > 0 && (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {wishlist.length > 0 &&\r\n              wishlist.map((item) => (\r\n                <WishlistProductCard\r\n                  loadWishlist={loadWishlist}\r\n                  product={item}\r\n                  key={item.product_id}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Wishlist;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Cart.js",["175"],"import { useState, useEffect } from \"react\";\r\nimport CartProductCard from \"../../components/cards/CartProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCartDetails } from \"../../functions/customer\";\r\nimport EmptyCart from \"../../images/empty_cart.png\";\r\nimport { getFlavours } from \"../../functions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [subTotal, setSubTotal] = useState(0);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [flavours, setFlavours] = useState([]);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const loadCartItemss = () => {\r\n      if (customer) {\r\n        getCartDetails(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              let cTotal = 0;\r\n              let sTotal = 0;\r\n              for (let i = 0; i < res.data.cart_items.length; i++) {\r\n                cTotal += res.data.cart_items[i].total_price;\r\n                const discount = Math.round(\r\n                  (res.data.cart_items[i].discounted_price /\r\n                    res.data.cart_items[i].price) *\r\n                    100\r\n                );\r\n\r\n                sTotal += res.data.cart_items[i].total_price * (100 / discount);\r\n              }\r\n              setCartTotal(cTotal);\r\n              setSubTotal(sTotal);\r\n              setCartItems(res.data.cart_items);\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: res.data.cart_items },\r\n              });\r\n            } else setCartItems([]);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    };\r\n    loadCartItemss();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(customer && customer.token)) {\r\n      toast.error(\"Log in to view your cart\");\r\n\r\n      history.push(\"/login\");\r\n    }\r\n  }, [customer, history]);\r\n\r\n  useEffect(() => {\r\n    getFlavours().then((res) => setFlavours(res.data.All_Flavours));\r\n  }, []);\r\n\r\n  const loadCartItems = () =>\r\n    getCartDetails(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") setCartItems(res.data.cart_items);\r\n        else setCartItems([]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n  const handleCheckout = () => {\r\n    dispatch({\r\n      type: \"GET_CART\",\r\n      payload: { ...customer, cartItems },\r\n    });\r\n    history.push({\r\n      pathname: \"/user/checkout\",\r\n      state: { from: \"user/cart\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\">My Cart ({cartItems.length} items)</h2>\r\n      {cartItems && !(cartItems.length > 0) && (\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"0 50px 0 50px\",\r\n          }}\r\n        >\r\n          <img src={EmptyCart} style={{ width: \"50%\" }} alt=\"empty cart\" />\r\n          <h4 className=\"text-center\">Oops! Your Cart is empty</h4>\r\n        </div>\r\n      )}\r\n      {customer && customer.cartItems && (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 \">\r\n              {cartItems.length > 0 &&\r\n                cartItems.map((item, i) => (\r\n                  <CartProductCard\r\n                    key={i}\r\n                    index={i}\r\n                    product={item}\r\n                    loadCartItems={loadCartItems}\r\n                    flavours={flavours}\r\n                    setSubTotal={setSubTotal}\r\n                    setCartTotal={setCartTotal}\r\n                    cartTotal={cartTotal}\r\n                    subTotal={subTotal}\r\n                    cartItems={cartItems}\r\n                  />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"col-md-4\">\r\n              <h4>Price Details</h4>\r\n              <h6>\r\n                Total Items : <b>{cartItems.length}</b>\r\n              </h6>\r\n              <h6>\r\n                Sub Total : <b>₹{Math.round(subTotal)}</b>\r\n              </h6>\r\n              <h6>\r\n                Discount : <b>₹{Math.round(subTotal - cartTotal)}</b>\r\n              </h6>\r\n              <hr />\r\n              <h6>\r\n                Total Price : <b>₹{Math.round(cartTotal)}</b>\r\n              </h6>\r\n              <button\r\n                className=\"btn my-btn-primary btn-block\"\r\n                onClick={handleCheckout}\r\n              >\r\n                Proceed to Checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Flavour.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Photo.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Profession.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\auth.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Designer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\customer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Ocassion.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\LoadingCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\ProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\index.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\WishlistProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Offer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CartProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CaetgoryCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Checkout.js",["176","177","178"],"import CheckoutProductCard from \"../../components/cards/CheckoutProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  getProfile,\r\n  placeOrder,\r\n  getCartDetails,\r\n} from \"../../functions/customer\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport logo from \"../../images/logo.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { checkPromo } from \"../../functions/customer\";\r\n\r\nconst Checkout = ({ history }) => {\r\n  const [hNo, setHNo] = useState(\"\");\r\n  const [locality, setLocality] = useState(\"\");\r\n  const [landmark, setLandmark] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [deliveryDate, setDeliveryDate] = useState(\"\");\r\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [promo, setPromo] = useState(\"\");\r\n  const [couponDiscount, setCouponDiscount] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isCodModalVisible, setIsCodModalVisible] = useState(false);\r\n  const [isPickMyselfModalVisible, setIsPickMyselfModalVisible] = useState(\r\n    false\r\n  );\r\n  const [products, setProducts] = useState([]);\r\n  const [range, setRange] = useState(\"0\");\r\n\r\n  const [city, setCity] = useState(\"dehradun\");\r\n  const [state, setState] = useState(\"uttarakhand\");\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setIsCodModalVisible(false);\r\n    setIsPickMyselfModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setIsCodModalVisible(false);\r\n    setIsPickMyselfModalVisible(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    getCartDetails(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") setProducts(res.data.cart_items);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  let intended = history.location.state;\r\n  if (!intended || !customer) history.push(\"/\");\r\n\r\n  let total = 0;\r\n  if (customer && customer.cartItems) {\r\n    for (let i = 0; i < customer.cartItems.length; i++) {\r\n      total += customer.cartItems[i].total_price;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProfile(customer.token).then((res) => {\r\n      setHNo(res.data.customer_detail.delivery_houseNo);\r\n      setLocality(res.data.customer_detail.delivery_locality);\r\n      setLandmark(res.data.customer_detail.delivery_landmark);\r\n      setPincode(res.data.customer_detail.delivery_pincode);\r\n      setPhone(res.data.customer_detail.contact_one);\r\n      setEmail(res.data.customer_detail.email);\r\n    });\r\n  }, [customer.token]);\r\n\r\n  //razorpay integration\r\n  function loadScript(src) {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async function displayRazorpay(result) {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    if (!result) {\r\n      alert(\"Server error. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    // Getting the order details back\r\n    const { amount, order_id } = result.data;\r\n\r\n    const options = {\r\n      key: \"rzp_live_BUrew3klYGQQzr\", // Enter the Key ID generated from the Dashboard\r\n      amount: amount ? amount.toString() : \"\",\r\n      currency: \"INR\",\r\n      name: \"Cakewaale\",\r\n      description: \"Cake  Transaction\",\r\n      image: { logo },\r\n      order_id: order_id,\r\n      handler: async function (response) {\r\n        const data = {\r\n          order_id: order_id,\r\n          razorpay_payment_id: response.razorpay_payment_id,\r\n\r\n          razorpay_signature: response.razorpay_signature,\r\n          pickup: paymentMethod === \"1\" ? \"0\" : \"1\",\r\n          delivery_date: deliveryDate + \" \" + deliveryTime + \":00\",\r\n          range: String(range),\r\n          promo: String(\r\n            Math.round((couponDiscount / 100) * (total + range * 10))\r\n          ),\r\n        };\r\n\r\n        await axios.post(\"https://cakewaale.com/api/customer/success\", data, {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        });\r\n        toast.success(\r\n          \"Your order has been successfully placed. Thank you for shopping with us!\"\r\n        );\r\n        dispatch({\r\n          type: \"GET_CART\",\r\n          payload: { ...customer, cartItems: undefined },\r\n        });\r\n\r\n        history.push(\"/\");\r\n      },\r\n      prefill: {\r\n        name: customer.name,\r\n        email: email,\r\n        contact: phone,\r\n      },\r\n      notes: {\r\n        address: \"Cakewaale Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#61dafb\",\r\n      },\r\n    };\r\n\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.on(\"payment.failed\", async function (response) {\r\n      const result = await axios.post(\r\n        \"https://cakewaale.com/api/customer/failure\",\r\n        { order_id },\r\n        {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        }\r\n      );\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n    paymentObject.open();\r\n  }\r\n\r\n  const handleOrder = () => {\r\n    if (!paymentMethod) toast.error(\"Please select payment method\");\r\n    else if (!deliveryDate || !deliveryTime)\r\n      toast.error(\"Please select delivery time and date\");\r\n    else if ((paymentMethod === \"0\" || paymentMethod === \"1\") && range === \"0\")\r\n      toast.error(\"Please select range\");\r\n    else\r\n      placeOrder(\r\n        deliveryDate + \" \" + deliveryTime + \":00\",\r\n        paymentMethod === \"3\" ? \"1\" : paymentMethod,\r\n        String(range),\r\n        String(Math.round((couponDiscount / 100) * (total + range * 10))),\r\n        customer.token\r\n      )\r\n        .then((res) => {\r\n          if (res.data.success === \"1\") {\r\n            if (paymentMethod === \"0\" || paymentMethod === \"2\") {\r\n              toast.success(\r\n                \"Order successfully placed. Thank you for shopping with us!\"\r\n              );\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: undefined },\r\n              });\r\n              history.push(\"/\");\r\n            } else displayRazorpay(res);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const changeAddress = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"address\");\r\n    setIsModalVisible(false);\r\n    await axios\r\n      .put(\r\n        `${process.env.REACT_APP_API}/api/customer/profile/update`,\r\n        {\r\n          address: \"delivery\",\r\n          houseNo: hNo,\r\n          locality,\r\n          landmark,\r\n          city,\r\n          state,\r\n          pincode,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => toast.success(\"Address Changed\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const showCodModal = () => setIsCodModalVisible(true);\r\n\r\n  const showPickMyselfModal = () => setIsPickMyselfModalVisible(true);\r\n\r\n  const ndate =\r\n    new Date().getDate().toString().length === 1\r\n      ? \"0\" + new Date().getDate().toString()\r\n      : new Date().getDate().toString();\r\n  const month =\r\n    (new Date().getMonth() + 1).toString().length === 1\r\n      ? \"0\" + (new Date().getMonth() + 1).toString()\r\n      : (new Date().getMonth() + 1).toString();\r\n\r\n  const minDate = `${new Date().getFullYear()}-${month}-${ndate}`;\r\n\r\n  const applyCoupon = () => {\r\n    let found = false;\r\n    checkPromo(promo, customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          toast.success(\"Promocode Applied\");\r\n          setCouponDiscount(res.data.discount);\r\n        } else {\r\n          toast.error(\"Invalid promocode\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Change Address\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-4\">\r\n          <form onSubmit={changeAddress}>\r\n            <label>House No.</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={hNo}\r\n              onChange={(e) => setHNo(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Landmark</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Locality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>City</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            >\r\n              <option value=\"dehradun\">Dehradun</option>\r\n            </select>\r\n            <br />\r\n            <label>State</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            >\r\n              <option value=\"uttarakhand\">Uttarakhand</option>\r\n            </select>\r\n            <br />\r\n            <label>Pincode</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <button className=\"btn my-btn-primary btn-block\">\r\n              Update Address\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Important Notice\"\r\n        visible={isCodModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-2\">\r\n          <p>\r\n            We are operating from Garhi Cantt and charging a minimal of Rs 10\r\n            per kilometer\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Important Notice\"\r\n        visible={isPickMyselfModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-2\">\r\n          {\" \"}\r\n          <p>\r\n            Please take the screenshot of the pickup address: 4L/1 Garhi Cantt,\r\n            near D.D. College, Rajendra Nagar, Ballupur Chowk, Dehradun. Contact\r\n            Number: +91 7253020679\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n      <h2 className=\"section-title\">Checkout</h2>\r\n      <div className=\"conatiner-fluid\">\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n          <div className=\"col-md-8 px-5\">\r\n            <label className=\"checkout-label\">Deliver to this address</label>\r\n            <textarea\r\n              disabled\r\n              className=\"form-control\"\r\n              style={{ resize: \"none\", height: \"100px\", width: \"90%\" }}\r\n              value={\r\n                hNo +\r\n                \", \" +\r\n                locality +\r\n                \", \" +\r\n                \"Near \" +\r\n                landmark +\r\n                \"\\n \" +\r\n                \"Dehradun, Uttarakhand -\" +\r\n                pincode\r\n              }\r\n            ></textarea>\r\n            <br />\r\n            <button className=\"btn my-btn-primary\" onClick={showModal}>\r\n              Update Address\r\n            </button>\r\n            {/* <button className=\"btn my-btn-secondary ml-1\">\r\n              Update Address\r\n            </button> */}\r\n            <br />\r\n            <label className=\"checkout-label\">Select payment options</label>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"0\"\r\n              checked={paymentMethod === \"0\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"0\");\r\n                showCodModal();\r\n              }}\r\n            />\r\n            &nbsp; Cash on delivery\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"1\"\r\n              checked={paymentMethod === \"1\"}\r\n              onChange={(e) => setPaymentMethod(\"1\")}\r\n            />\r\n            &nbsp;Pay online and get delivered to specified address\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"2\"\r\n              checked={paymentMethod === \"2\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"2\");\r\n                showPickMyselfModal();\r\n              }}\r\n            />\r\n            &nbsp;Pick myself and pay cash at our store\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"3\"\r\n              checked={paymentMethod === \"3\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"3\");\r\n                showPickMyselfModal();\r\n              }}\r\n            />\r\n            &nbsp;Pay online and pick myself\r\n            <br />\r\n            {/* <label className=\"checkout-label\">Have promocode?</label>\r\n            <br />\r\n            <input type=\"text\" className=\"form-control\" />\r\n            <br /> */}\r\n            <label className=\"checkout-label\">Select delivery date</label>\r\n            <input\r\n              type=\"date\"\r\n              min={minDate}\r\n              className=\"form-control\"\r\n              onChange={(e) => setDeliveryDate(e.target.value)}\r\n            />\r\n            <label className=\"checkout-label\">Select delivery time</label>\r\n            <input\r\n              type=\"time\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setDeliveryTime(e.target.value)}\r\n            />\r\n            {(paymentMethod === \"0\" || paymentMethod === \"1\") && (\r\n              <>\r\n                <p className=\"budget checkout-label\">\r\n                  Select your expected distance from Ballupur Chowk\r\n                </p>\r\n                <div class=\"slidecontainer\">\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={range}\r\n                    className=\"range-slider\"\r\n                    onChange={(e) => setRange(e.target.value)}\r\n                    id=\"myRange\"\r\n                  />\r\n                  <p className=\"text-center\">\r\n                    <strong>{range} kms</strong>\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n            <label className=\"checkout-label\">Have Promocode?</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setPromo(e.target.value)}\r\n            />\r\n            <br />\r\n            <button className=\"btn my-btn-primary\" onClick={applyCoupon}>\r\n              Apply\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-4 mt-5 px-5\">\r\n            <h4 className=\"order-summary-title\">\r\n              Order Summary\r\n              <br />({customer.cartItems ? customer.cartItems.length : 0} items)\r\n            </h4>\r\n            <br />\r\n            {products.length > 0 &&\r\n              products.map((item) => (\r\n                <CheckoutProductCard key={item.product_id} product={item} />\r\n              ))}\r\n            <hr />\r\n            <div style={{ width: \"100%\" }}>\r\n              <span className=\"checkout-label\">Delivery Charges</span>\r\n              <span className=\"float-right checkout-label\">\r\n                <strong>₹{range * 10}</strong>\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div style={{ width: \"100%\" }}>\r\n              <span className=\"checkout-label\">\r\n                Total<small>(including delivery charges)</small>\r\n              </span>\r\n              <span className=\"float-right checkout-label\">\r\n                <strong>₹{total + range * 10}</strong>\r\n              </span>\r\n            </div>\r\n            {couponDiscount > 0 && (\r\n              <>\r\n                <br />\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span className=\"checkout-label\">Promocode Discount</span>\r\n                  <span className=\"float-right checkout-label\">\r\n                    <strong>\r\n                      ₹\r\n                      {Math.round(\r\n                        (couponDiscount / 100) * (total + range * 10)\r\n                      )}\r\n                    </strong>\r\n                  </span>\r\n                </div>\r\n                <hr />\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span className=\"checkout-label\">\r\n                    Total<small>(after applying promocode)</small>\r\n                  </span>\r\n                  <span className=\"float-right checkout-label\">\r\n                    <strong>\r\n                      ₹\r\n                      {Math.round(\r\n                        ((100 - couponDiscount) / 100) * (total + range * 10)\r\n                      )}\r\n                    </strong>\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n            <br />\r\n            <button\r\n              className=\"btn my-btn-primary btn-block\"\r\n              onClick={handleOrder}\r\n            >\r\n              Place Order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CheckoutProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\OngoingOrders.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\PreviousOrders.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Search.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Promocode.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":58,"column":6,"nodeType":"185","endLine":58,"endColumn":8,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"184","line":75,"column":6,"nodeType":"185","endLine":75,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":61,"column":9,"nodeType":"190","messageId":"191","endLine":61,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":265,"column":9,"nodeType":"194","endLine":270,"endColumn":11},{"ruleId":"183","severity":1,"message":"184","line":57,"column":6,"nodeType":"185","endLine":57,"endColumn":8,"suggestions":"195"},{"ruleId":"183","severity":1,"message":"184","line":50,"column":6,"nodeType":"185","endLine":50,"endColumn":8,"suggestions":"196"},{"ruleId":"183","severity":1,"message":"197","line":64,"column":6,"nodeType":"185","endLine":64,"endColumn":8,"suggestions":"198"},{"ruleId":"188","severity":1,"message":"199","line":172,"column":13,"nodeType":"190","messageId":"191","endLine":172,"endColumn":19},{"ruleId":"188","severity":1,"message":"200","line":265,"column":9,"nodeType":"190","messageId":"191","endLine":265,"endColumn":14},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customer' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["203"],["204"],"no-unused-vars","'handleGoogleLogin' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["205"],["206"],"React Hook useEffect has a missing dependency: 'customer.token'. Either include it or remove the dependency array.",["207"],"'result' is assigned a value but never used.","'found' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"208","fix":"211"},{"desc":"208","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [customer, dispatch]",{"range":"215","text":"216"},{"range":"217","text":"216"},{"range":"218","text":"216"},{"range":"219","text":"216"},"Update the dependencies array to be: [customer.token]",{"range":"220","text":"221"},[2453,2455],"[customer, dispatch]",[2903,2905],[1722,1724],[1866,1868],[2187,2189],"[customer.token]"]