[{"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\App.js":"3","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\index.js":"4","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Home.js":"5","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Signup.js":"6","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\PrivacyPolicy.js":"7","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Faq.js":"8","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\ScrollToTop.js":"9","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductList.js":"10","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Login.js":"11","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Footer.js":"12","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\MyProfile.js":"13","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Feedback.js":"14","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Topnav.js":"15","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\customerReducer.js":"16","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\About.js":"17","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductDetails.js":"18","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Wishlist.js":"19","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Cart.js":"20","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Flavour.js":"21","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Photo.js":"22","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Profession.js":"23","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\auth.js":"24","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Designer.js":"25","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\customer.js":"26","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Ocassion.js":"27","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\LoadingCard.js":"28","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\ProductCard.js":"29","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\index.js":"30","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\WishlistProductCard.js":"31","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Offer.js":"32","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CartProductCard.js":"33","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CaetgoryCard.js":"34","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Checkout.js":"35","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CheckoutProductCard.js":"36","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\OngoingOrders.js":"37","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\PreviousOrders.js":"38","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Search.js":"39","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Promocode.js":"40","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\Map.js":"41","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\client-config.js":"42","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\GoogleSignupComplete.js":"43"},{"size":1284,"mtime":1612891973494,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1612596551780,"results":"46","hashOfConfig":"45"},{"size":5292,"mtime":1621351825130,"results":"47","hashOfConfig":"45"},{"size":163,"mtime":1612596551780,"results":"48","hashOfConfig":"45"},{"size":7967,"mtime":1623391756074,"results":"49","hashOfConfig":"45"},{"size":9450,"mtime":1623250733151,"results":"50","hashOfConfig":"45"},{"size":750,"mtime":1612596551764,"results":"51","hashOfConfig":"45"},{"size":747,"mtime":1612596551764,"results":"52","hashOfConfig":"45"},{"size":361,"mtime":1612596551717,"results":"53","hashOfConfig":"45"},{"size":3176,"mtime":1618936199766,"results":"54","hashOfConfig":"45"},{"size":6091,"mtime":1623131978288,"results":"55","hashOfConfig":"45"},{"size":8685,"mtime":1623340797443,"results":"56","hashOfConfig":"45"},{"size":8371,"mtime":1618685438858,"results":"57","hashOfConfig":"45"},{"size":1500,"mtime":1615383440368,"results":"58","hashOfConfig":"45"},{"size":13049,"mtime":1623391468406,"results":"59","hashOfConfig":"45"},{"size":383,"mtime":1612867313120,"results":"60","hashOfConfig":"45"},{"size":674,"mtime":1612596551764,"results":"61","hashOfConfig":"45"},{"size":14723,"mtime":1621349986073,"results":"62","hashOfConfig":"45"},{"size":3331,"mtime":1618129387254,"results":"63","hashOfConfig":"45"},{"size":6147,"mtime":1621355662416,"results":"64","hashOfConfig":"45"},{"size":3475,"mtime":1618952091185,"results":"65","hashOfConfig":"45"},{"size":2475,"mtime":1618951735599,"results":"66","hashOfConfig":"45"},{"size":2150,"mtime":1618951719730,"results":"67","hashOfConfig":"45"},{"size":823,"mtime":1623131814117,"results":"68","hashOfConfig":"45"},{"size":2492,"mtime":1618951773795,"results":"69","hashOfConfig":"45"},{"size":6024,"mtime":1623131115000,"results":"70","hashOfConfig":"45"},{"size":2125,"mtime":1618951753599,"results":"71","hashOfConfig":"45"},{"size":470,"mtime":1612596551717,"results":"72","hashOfConfig":"45"},{"size":3857,"mtime":1618129804078,"results":"73","hashOfConfig":"45"},{"size":1957,"mtime":1615277069741,"results":"74","hashOfConfig":"45"},{"size":10744,"mtime":1613034899383,"results":"75","hashOfConfig":"45"},{"size":2482,"mtime":1618951743714,"results":"76","hashOfConfig":"45"},{"size":19695,"mtime":1621355688403,"results":"77","hashOfConfig":"45"},{"size":832,"mtime":1612851734626,"results":"78","hashOfConfig":"45"},{"size":22656,"mtime":1621401577183,"results":"79","hashOfConfig":"45"},{"size":836,"mtime":1618918291655,"results":"80","hashOfConfig":"45"},{"size":3787,"mtime":1621401890755,"results":"81","hashOfConfig":"45"},{"size":2509,"mtime":1621351390717,"results":"82","hashOfConfig":"45"},{"size":2934,"mtime":1615447279034,"results":"83","hashOfConfig":"45"},{"size":753,"mtime":1615277900774,"results":"84","hashOfConfig":"45"},{"size":15419,"mtime":1618957704642,"results":"85","hashOfConfig":"45"},{"size":73,"mtime":1618222758833,"results":"86","hashOfConfig":"45"},{"size":1835,"mtime":1618350441416,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1y6ibfp",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\index.js",[],["184","185"],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\App.js",["186","187"],"import \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { getCartDetails } from \"./functions/customer\";\r\nimport { lazy, Suspense, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getWishlist } from \"./functions/customer\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Home = lazy(() => import(\"./pages/Home\"));\r\nconst Login = lazy(() => import(\"./pages/Login\"));\r\nconst Signup = lazy(() => import(\"./pages/Signup\"));\r\nconst GoogleSignupComplete = lazy(() => import(\"./pages/GoogleSignupComplete\"));\r\nconst Faq = lazy(() => import(\"./pages/Faq\"));\r\nconst PrivacyPolicy = lazy(() => import(\"./pages/PrivacyPolicy\"));\r\nconst About = lazy(() => import(\"./pages/About\"));\r\nconst Feedback = lazy(() => import(\"./pages/Feedback\"));\r\nconst ProductList = lazy(() => import(\"./pages/ProductList\"));\r\nconst ProductDetails = lazy(() => import(\"./pages/ProductDetails\"));\r\nconst MyProfile = lazy(() => import(\"./pages/customer/MyProfile\"));\r\nconst Cart = lazy(() => import(\"./pages/customer/Cart\"));\r\nconst Wishlist = lazy(() => import(\"./pages/customer/Wishlist\"));\r\nconst Checkout = lazy(() => import(\"./pages/customer/Checkout\"));\r\nconst OngoingOrders = lazy(() => import(\"./pages/customer/OngoingOrders\"));\r\nconst PreviousOrders = lazy(() => import(\"./pages/customer/PreviousOrders\"));\r\nconst Search = lazy(() => import(\"./pages/Search\"));\r\nconst ScrollToTop = lazy(() => import(\"./components/ScrollToTop\"));\r\nconst Topnav = lazy(() => import(\"./components/nav/Topnav\"));\r\nconst Footer = lazy(() => import(\"./components/nav/Footer\"));\r\nconst Promocode = lazy(() => import(\"./pages/Promocode\"));\r\n\r\nfunction App() {\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (customer) {\r\n      const loadCartItemss = () =>\r\n        getCartDetails(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: res.data.cart_items },\r\n              });\r\n            } else if (\r\n              res.data.success === \"0\" &&\r\n              res.data.message === \"Token not valid!!\"\r\n            ) {\r\n              dispatch({\r\n                type: \"LOG_OUT_CUSTOMER\",\r\n                payload: null,\r\n              });\r\n            } else\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: undefined },\r\n              });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n      loadCartItemss();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (customer) {\r\n      getWishlist(customer.token).then((res) => {\r\n        if (res.data.success === \"1\")\r\n          dispatch({\r\n            type: \"GET_WISHLIST\",\r\n            payload: { ...customer, wishlist: res.data.fav_items },\r\n          });\r\n        else\r\n          dispatch({\r\n            type: \"GET_WISHLIST\",\r\n            payload: { ...customer, wishlist: undefined },\r\n          });\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense\r\n        fallback={\r\n          <div className=\"loading-container\">\r\n            <div\r\n              className=\"loader\"\r\n              style={{ fontSize: \"48px\", color: \"#cb202d\" }}\r\n            >\r\n              <LoadingOutlined />\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <ToastContainer />\r\n\r\n        <ScrollToTop />\r\n        <header className=\"App-header\">\r\n          <Topnav />\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route\r\n            exact\r\n            path=\"/signup/complete\"\r\n            component={GoogleSignupComplete}\r\n          />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n          <Route exact path=\"/faq\" component={Faq} />\r\n          <Route exact path=\"/feedback\" component={Feedback} />\r\n          <Route exact path=\"/product-list/:slug\" component={ProductList} />\r\n          <Route\r\n            exact\r\n            path=\"/product-details/:slug\"\r\n            component={ProductDetails}\r\n          />\r\n          <Route exact path=\"/user/profile\" component={MyProfile} />\r\n          <Route exact path=\"/user/cart\" component={Cart} />\r\n          <Route exact path=\"/user/wishlist\" component={Wishlist} />\r\n          <Route exact path=\"/user/checkout\" component={Checkout} />\r\n          <Route exact path=\"/user/ongoing-orders\" component={OngoingOrders} />\r\n          <Route\r\n            exact\r\n            path=\"/user/previous-orders\"\r\n            component={PreviousOrders}\r\n          />\r\n          <Route exact path=\"/search/:keyword\" component={Search} />\r\n          <Route exact path=\"/promocode\" component={Promocode} />\r\n        </Switch>\r\n        <Footer />\r\n        <div className=\"space\"></div>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\index.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Home.js",["188","189"],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Signup.js",["190"],"import { useState, useEffect } from \"react\";\r\nimport Google from \"../images/icons/Google.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signupCustomer } from \"../functions/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getCartDetails, incVisCount } from \"../functions/customer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst Signup = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [contactOne, setContactOne] = useState(\"\");\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(history.location.search);\r\n    const token = query.get(\"id\");\r\n    if (token) {\r\n      if (!window.localStorage.getItem(\"id\")) {\r\n        incVisCount(token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\")\r\n              window.localStorage.setItem(\"id\", token);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (customer && customer.token) history.push(\"/\");\r\n  }, [customer, history]);\r\n\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n    signupCustomer(\r\n      name,\r\n      email,\r\n      password,\r\n      contactOne,\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"dehradun\",\r\n      \"uttarakhand\",\r\n      \"\",\r\n      window.localStorage.getItem(\"id\") ? window.localStorage.getItem(\"id\") : \"\"\r\n    )\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          toast.success(\r\n            \"You have successfully signed up. Please log in to continue.\"\r\n          );\r\n          history.push(\"/login\");\r\n        } else toast.error(\"User account already exists.\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const handleGoogleSignup = async () => {\r\n  //   let intended = history.location.state;\r\n  //   await axios\r\n  //     .get(`${process.env.REACT_APP_API}/login/google`)\r\n  //     .then((res) => {\r\n  //       if (res.data.success === \"1\") {\r\n  //         getCartDetails(res.data.token)\r\n  //           .then((response) => {\r\n  //             if (res.data.success === \"1\") {\r\n  //               dispatch({\r\n  //                 type: \"LOG_IN_CUSTOMER\",\r\n  //                 payload: {\r\n  //                   name: res.data.name,\r\n  //                   token: res.data.token,\r\n  //                   cartItems: response.data.cart_items,\r\n  //                 },\r\n  //               });\r\n  //             }\r\n  //           })\r\n  //           .catch((err) => {\r\n  //             console.log(err);\r\n  //           });\r\n  //         if (intended) history.push(intended.from);\r\n  //         else history.push(\"/\");\r\n  //       } else {\r\n  //         if (res.data.message === \"Customer not present\") {\r\n  //           toast.error(\"There is no account signed up with this email.\");\r\n  //           setEmail(\"\");\r\n  //           setPassword(\"\");\r\n  //         } else {\r\n  //           toast.error(\"Invalid password.\");\r\n  //           setPassword(\"\");\r\n  //         }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n\r\n  const responseGoogle = async (response) => {\r\n    if (response.accessToken) {\r\n      let intended = history.location.state;\r\n      await axios\r\n        .post(`${process.env.REACT_APP_API}/login/google`, {\r\n          email: response.profileObj.email,\r\n          name: response.profileObj.name,\r\n          referer_id: window.localStorage.getItem(\"id\")\r\n            ? window.localStorage.getItem(\"id\")\r\n            : \"\",\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success === \"1\") {\r\n            getCartDetails(res.data.token)\r\n              .then((response) => {\r\n                if (res.data.success === \"1\") {\r\n                  dispatch({\r\n                    type: \"LOG_IN_CUSTOMER\",\r\n                    payload: {\r\n                      name: res.data.name,\r\n                      token: res.data.token,\r\n                      cartItems: response.data.cart_items,\r\n                    },\r\n                  });\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n            if (intended)\r\n              history.push({\r\n                pathname: \"/signup/complete\",\r\n                state: { from: intended.from },\r\n              });\r\n            else history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      toast.error(\"Google Login failed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-5 col-xl-4 mx-xl-auto mx-lg-auto col-sm-10 offset-sm-1 mx-md-auto col-md-7 login px-5\">\r\n          <h4 className=\"login-title\">Sign up</h4>\r\n          <form onSubmit={handleSignup}>\r\n            <label>Full name</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Email</label>\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Contact</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={contactOne}\r\n              onChange={(e) => setContactOne(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            {/* <label>Secondary Contact (Optional)</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={contactTwo}\r\n              onChange={(e) => setContactTwo(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>House No.</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={hNo}\r\n              onChange={(e) => setHNo(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Landmark</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Locality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Select city</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            >\r\n              <option value=\"dehradun\">Dehradun</option>\r\n            </select>\r\n            <br />\r\n            <label>Select state</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            >\r\n              <option value=\"uttarakhand\">Uttarakhand</option>\r\n            </select>\r\n            <br />\r\n            <label>Pincode</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br /> */}\r\n            <label>Create Password</label>\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n            <br />\r\n            <button className=\"btn my-btn-primary btn-block\">Sign up</button>\r\n          </form>\r\n          <br />\r\n          <p className=\"text-center\">Or</p>\r\n          <GoogleLogin\r\n            clientId=\"1092069209527-ah4qn93lim76rutudu0jc7esgnuhr91d.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            render={(renderProps) => (\r\n              <div\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                className=\"btn btn-google\"\r\n              >\r\n                <img src={Google} alt=\"google-icon\" />\r\n                Continue with google\r\n              </div>\r\n            )}\r\n          />\r\n          <br />\r\n          {/* <div className=\"btn btn-fb\">\r\n            <img src={Fb} alt=\"facebook-icon\" />\r\n            <span className=\"text-white ml-2\">Continue with facebook</span>\r\n          </div> */}\r\n          <br />\r\n          <p className=\"text-center\">Already a user?</p>\r\n          <Link to=\"/login\" className=\"btn my-btn-secondary btn-block\">\r\n            Log in\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\PrivacyPolicy.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Faq.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\ScrollToTop.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductList.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Login.js",["191"],"import Google from \"../images/icons/Google.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { loginCustomer } from \"../functions/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getCartDetails, incVisCount } from \"../functions/customer\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(history.location.search);\r\n    const token = query.get(\"id\");\r\n    if (token) {\r\n      if (!window.localStorage.getItem(\"id\")) {\r\n        incVisCount(token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\")\r\n              window.localStorage.setItem(\"id\", token);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (customer && customer.token) history.push(\"/\");\r\n  }, [customer, history]);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    let intended = history.location.state;\r\n    loginCustomer(email, password)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          getCartDetails(res.data.token)\r\n            .then((response) => {\r\n              if (res.data.success === \"1\") {\r\n                dispatch({\r\n                  type: \"LOG_IN_CUSTOMER\",\r\n                  payload: {\r\n                    name: res.data.name,\r\n                    token: res.data.token,\r\n                    cartItems: response.data.cart_items,\r\n                  },\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          if (intended) history.push(intended.from);\r\n          else history.push(\"/\");\r\n        } else {\r\n          if (res.data.message === \"Customer not present\") {\r\n            toast.error(\"There is no account signed up with this email.\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n          } else {\r\n            toast.error(\"Invalid password.\");\r\n            setPassword(\"\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    if (response.accessToken) {\r\n      let intended = history.location.state;\r\n      await axios\r\n        .post(`${process.env.REACT_APP_API}/login/google`, {\r\n          email: response.profileObj.email,\r\n          name: response.profileObj.name,\r\n          referer_id: window.localStorage.getItem(\"id\")\r\n            ? window.localStorage.getItem(\"id\")\r\n            : \"\",\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success === \"1\") {\r\n            getCartDetails(res.data.token)\r\n              .then((response) => {\r\n                if (res.data.success === \"1\") {\r\n                  dispatch({\r\n                    type: \"LOG_IN_CUSTOMER\",\r\n                    payload: {\r\n                      name: res.data.name,\r\n                      token: res.data.token,\r\n                      cartItems: response.data.cart_items,\r\n                    },\r\n                  });\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n            if (intended) history.push(intended.from);\r\n            else history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      toast.error(\"Google Login failed!\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-5 col-xl-4 mx-xl-auto mx-lg-auto col-sm-10 offset-sm-1 mx-md-auto col-md-7 login px-5\">\r\n          <h4 className=\"login-title\">Login</h4>\r\n          <form onSubmit={handleLogin}>\r\n            <label>Email</label>\r\n            <br />\r\n            <input\r\n              required\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Password</label>\r\n            <br />\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n            <br />\r\n            <button className=\"btn my-btn-primary btn-block\">Log in</button>\r\n            <br />\r\n            <p className=\"text-center\">Or</p>\r\n            {/* <div className=\"btn btn-google\" onClick={handleGoogleLogin}>\r\n              <img src={Google} alt=\"google-icon\" />\r\n              Continue with google\r\n            </div> */}\r\n            <GoogleLogin\r\n              clientId=\"1092069209527-ah4qn93lim76rutudu0jc7esgnuhr91d.apps.googleusercontent.com\"\r\n              buttonText=\"Login\"\r\n              onSuccess={responseGoogle}\r\n              onFailure={responseGoogle}\r\n              render={(renderProps) => (\r\n                <div\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                  className=\"btn btn-google\"\r\n                >\r\n                  <img src={Google} alt=\"google-icon\" />\r\n                  Continue with google\r\n                </div>\r\n              )}\r\n            />\r\n            <br />\r\n            {/* <div className=\"btn btn-fb\">\r\n              <img src={Fb} alt=\"facebook-icon\" />\r\n              <span className=\"text-white ml-2\">Continue with facebook</span>\r\n            </div> */}\r\n            <br />\r\n            <p className=\"text-center\">Not a user?</p>\r\n            <Link to=\"/signup\" className=\"btn my-btn-secondary btn-block\">\r\n              Sign up\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Footer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\MyProfile.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Feedback.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\nav\\Topnav.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\reducers\\customerReducer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\About.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\ProductDetails.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Wishlist.js",["192"],"import WishlistProductCard from \"../../components/cards/WishlistProductCard\";\r\nimport { getWishlist } from \"../../functions/customer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmptyWishlist from \"../../images/empty-wishlist.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Wishlist = ({ history }) => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!(customer && customer.token)) {\r\n      toast.error(\"Log in to view your wishlist\");\r\n\r\n      history.push(\"/login\");\r\n    }\r\n  }, [customer, history]);\r\n\r\n  const loadWishlist = () => {\r\n    getWishlist(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          setWishlist(res.data.fav_items);\r\n        } else {\r\n          setWishlist([]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customer) {\r\n      const loadWishlists = () => {\r\n        getWishlist(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              setWishlist(res.data.fav_items);\r\n\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: res.data.fav_items },\r\n              });\r\n              setLoading(false);\r\n            } else {\r\n              setWishlist([]);\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: undefined },\r\n              });\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      };\r\n      loadWishlists();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <div\r\n            className=\"loader\"\r\n            style={{ fontSize: \"48px\", color: \"#cb202d\" }}\r\n          >\r\n            <LoadingOutlined />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <h2 className=\"section-title\">\r\n          {\" \"}\r\n          My Wishlist ({wishlist.length} items)\r\n        </h2>\r\n      )}\r\n      {!loading && wishlist.length === 0 && (\r\n        <>\r\n          <div className=\"empty-wishlist-image\">\r\n            <img\r\n              src={EmptyWishlist}\r\n              alt=\"Empty Cart\"\r\n              style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n            />\r\n          </div>\r\n          <br />\r\n          <h4 className=\"text-center\" style={{ color: \"grey\" }}>\r\n            Your Wishlist is empty\r\n          </h4>\r\n        </>\r\n      )}\r\n      {!loading && wishlist.length > 0 && (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {wishlist.length > 0 &&\r\n              wishlist.map((item) => (\r\n                <WishlistProductCard\r\n                  loadWishlist={loadWishlist}\r\n                  product={item}\r\n                  key={item.product_id}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Wishlist;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Cart.js",["193"],"import { useState, useEffect } from \"react\";\r\nimport CartProductCard from \"../../components/cards/CartProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCartDetails } from \"../../functions/customer\";\r\nimport EmptyCart from \"../../images/empty_cart.png\";\r\nimport { getFlavours } from \"../../functions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [subTotal, setSubTotal] = useState(0);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [flavours, setFlavours] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const loadCartItemss = () => {\r\n      setLoading(true);\r\n      if (customer) {\r\n        getCartDetails(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\") {\r\n              let cTotal = 0;\r\n              let sTotal = 0;\r\n              for (let i = 0; i < res.data.cart_items.length; i++) {\r\n                cTotal += res.data.cart_items[i].total_price;\r\n                const discount = Math.round(\r\n                  (res.data.cart_items[i].discounted_price /\r\n                    res.data.cart_items[i].price) *\r\n                    100\r\n                );\r\n\r\n                sTotal += res.data.cart_items[i].total_price * (100 / discount);\r\n              }\r\n              setCartTotal(cTotal);\r\n              setSubTotal(sTotal);\r\n              setCartItems(res.data.cart_items);\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: res.data.cart_items },\r\n              });\r\n              setLoading(false);\r\n            } else {\r\n              setCartItems([]);\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    };\r\n    loadCartItemss();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(customer && customer.token)) {\r\n      toast.error(\"Log in to view your cart\");\r\n\r\n      history.push(\"/login\");\r\n    }\r\n  }, [customer, history]);\r\n\r\n  useEffect(() => {\r\n    getFlavours().then((res) => setFlavours(res.data.All_Flavours));\r\n  }, []);\r\n\r\n  const loadCartItems = () =>\r\n    getCartDetails(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          setCartItems(res.data.cart_items);\r\n        } else setCartItems([]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n  const handleCheckout = () => {\r\n    dispatch({\r\n      type: \"GET_CART\",\r\n      payload: { ...customer, cartItems },\r\n    });\r\n    history.push({\r\n      pathname: \"/user/checkout\",\r\n      state: { from: \"user/cart\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"loading-container\">\r\n          <div\r\n            className=\"loader\"\r\n            style={{ fontSize: \"48px\", color: \"#cb202d\" }}\r\n          >\r\n            <LoadingOutlined />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <h2 className=\"section-title\">My Cart ({cartItems.length} items)</h2>\r\n      )}\r\n      {!loading && cartItems && !(cartItems.length > 0) && (\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"0 50px 0 50px\",\r\n          }}\r\n        >\r\n          <img\r\n            src={EmptyCart}\r\n            style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n            alt=\"empty cart\"\r\n          />\r\n          <br />\r\n          <h4 className=\"text-center\" style={{ color: \"grey\" }}>\r\n            Oops! Your Cart is empty\r\n          </h4>\r\n        </div>\r\n      )}\r\n      {!loading && customer && customer.cartItems && (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 \">\r\n              {cartItems.length > 0 &&\r\n                cartItems.map((item, i) => (\r\n                  <CartProductCard\r\n                    key={i}\r\n                    index={i}\r\n                    product={item}\r\n                    loadCartItems={loadCartItems}\r\n                    flavours={flavours}\r\n                    setSubTotal={setSubTotal}\r\n                    setCartTotal={setCartTotal}\r\n                    cartTotal={cartTotal}\r\n                    subTotal={subTotal}\r\n                    cartItems={cartItems}\r\n                  />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"col-md-4\">\r\n              <div className=\"mr-3 cart-price-details\">\r\n                <h4 style={{ color: \"#cb202d\" }}>Price Details</h4>\r\n                <h5>\r\n                  Total Items{\" \"}\r\n                  <span className=\"float-right\">{cartItems.length}</span>\r\n                </h5>\r\n                <h5>\r\n                  Sub Total{\" \"}\r\n                  <span className=\"float-right\">₹{Math.round(subTotal)}</span>\r\n                </h5>\r\n                <h5>\r\n                  Discount{\" \"}\r\n                  <span className=\"float-right\">\r\n                    ₹{Math.round(subTotal - cartTotal)}\r\n                  </span>\r\n                </h5>\r\n                <hr />\r\n                <h5>\r\n                  <b>\r\n                    {\" \"}\r\n                    Total Price\r\n                    <span className=\"float-right\">\r\n                      ₹{Math.round(cartTotal)}\r\n                    </span>\r\n                  </b>\r\n                </h5>\r\n                <button\r\n                  className=\"btn my-btn-primary btn-block\"\r\n                  onClick={handleCheckout}\r\n                  style={{ fontFamily: '\"Montserrat\", sans-serif' }}\r\n                >\r\n                  Proceed to Checkout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Flavour.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Photo.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Profession.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\auth.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Designer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\customer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Ocassion.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\LoadingCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\ProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\functions\\index.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\WishlistProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\home\\Offer.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CartProductCard.js",["194"],"import { useState, useEffect } from \"react\";\r\nimport { removeCartItem } from \"../../functions/customer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Avatar, Badge } from \"antd\";\r\nimport {\r\n  getCartDetails,\r\n  addToWishlist,\r\n  increaseQuantity,\r\n  decreaseQuantity,\r\n  changeFlavour,\r\n  changeWeight,\r\n  changeCakeType,\r\n  getWishlist,\r\n  changeName,\r\n  changeSuggestion,\r\n} from \"../../functions/customer\";\r\nimport { getIndividualProduct } from \"../../functions/index\";\r\nimport axios from \"axios\";\r\n\r\nconst CartProductCard = ({\r\n  product,\r\n  loadCartItems,\r\n  flavours,\r\n  setSubTotal,\r\n  setCartTotal,\r\n  cartTotal,\r\n  subTotal,\r\n  cartItems,\r\n  index,\r\n}) => {\r\n  const [weight, setWeight] = useState(product.weight);\r\n  const [qty, setQty] = useState(product.quantity);\r\n  const [discountedPrice, setDiscountedPrice] = useState(product.total_price);\r\n  const discount = 100 - (product.discounted_price / product.price) * 100;\r\n  const [price, setPrice] = useState(\r\n    Math.round(product.total_price * (100 / (100 - discount)))\r\n  );\r\n  const [flavour, setFlavour] = useState(product.flavour);\r\n  const [minWeight, setMinWeight] = useState(1);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [checked, setChecked] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [suggestion, setSuggestion] = useState(\"\");\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setDiscountedPrice(product.total_price);\r\n    setPrice(Math.round(product.total_price * (100 / (100 - discount))));\r\n    getIndividualProduct(product.product_id).then((res) =>\r\n      setMinWeight(res.data.Product.weight)\r\n    );\r\n  }, [product.product_id]);\r\n\r\n  const increaseWeight = () => {\r\n    if (weight < 10) {\r\n      setDisabled(true);\r\n      changeWeight(\r\n        product.product_id,\r\n        (discountedPrice / weight) * (weight + 1),\r\n        weight + 1,\r\n        customer.token\r\n      ).then((res) => {\r\n        setDisabled(false);\r\n      });\r\n      cartItems[index] = {\r\n        ...cartItems[index],\r\n        weight: weight + 1,\r\n        total_price: (discountedPrice / weight) * (weight + 1),\r\n      };\r\n      setCartTotal(\r\n        cartTotal - discountedPrice + (discountedPrice / weight) * (weight + 1)\r\n      );\r\n      setSubTotal(\r\n        subTotal -\r\n          price +\r\n          (discountedPrice / weight) * (weight + 1) * (100 / (100 - discount))\r\n      );\r\n      setDiscountedPrice((discountedPrice / weight) * (weight + 1));\r\n      setPrice(\r\n        (discountedPrice / weight) * (weight + 1) * (100 / (100 - discount))\r\n      );\r\n      setWeight(weight + 1);\r\n    }\r\n  };\r\n  const decreaseWeight = () => {\r\n    if (weight > minWeight) {\r\n      setDisabled(true);\r\n      changeWeight(\r\n        product.product_id,\r\n        (discountedPrice / weight) * (weight - 1),\r\n        weight - 1,\r\n        customer.token\r\n      ).then((res) => {\r\n        setDisabled(false);\r\n      });\r\n      cartItems[index] = {\r\n        ...cartItems[index],\r\n        weight: weight - 1,\r\n        total_price: (discountedPrice / weight) * (weight - 1),\r\n      };\r\n      setCartTotal(\r\n        cartTotal - discountedPrice + (discountedPrice / weight) * (weight - 1)\r\n      );\r\n      setSubTotal(\r\n        subTotal -\r\n          price +\r\n          (discountedPrice / weight) * (weight - 1) * (100 / (100 - discount))\r\n      );\r\n      setDiscountedPrice((discountedPrice / weight) * (weight - 1));\r\n      setPrice(\r\n        (discountedPrice / weight) * (weight - 1) * (100 / (100 - discount))\r\n      );\r\n      setWeight(weight - 1);\r\n    }\r\n  };\r\n\r\n  const removeItem = (showToast = true) => {\r\n    removeCartItem(product.product_id, customer.token).then((res) => {\r\n      if (res.data.success === \"1\") {\r\n        if (showToast) toast.warning(\"Item removed from cart!\");\r\n        loadCartItems();\r\n        const discount = Math.round(\r\n          (product.discounted_price / product.price) * 100\r\n        );\r\n        setCartTotal(cartTotal - product.total_price);\r\n        setSubTotal(subTotal - product.total_price * (100 / discount));\r\n        getCartDetails(customer.token)\r\n          .then((res) => {\r\n            if (res.data.success === \"1\")\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: res.data.cart_items },\r\n              });\r\n            else\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: undefined },\r\n              });\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    });\r\n  };\r\n\r\n  const addItemToWishlist = async () => {\r\n    addToWishlist(product.product_id, minWeight, customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          toast.warning(\"Item moved to wishlist\");\r\n          getWishlist(customer.token).then((res) => {\r\n            if (res.data.success === \"1\")\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: res.data.fav_items },\r\n              });\r\n            else\r\n              dispatch({\r\n                type: \"GET_WISHLIST\",\r\n                payload: { ...customer, wishlist: undefined },\r\n              });\r\n          });\r\n          removeItem(false);\r\n        } else if (\r\n          res.data.success === \"0\" &&\r\n          res.data.message === \"item already in favourites\"\r\n        )\r\n          toast.info(\"Item already in wishlist\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const uploadFiles = (e) => {\r\n    if (e.target.files.length + product.images.length > product.max_image)\r\n      toast.error(\r\n        `You must only select upto ${product.max_image} images for this cake.`\r\n      );\r\n    else {\r\n      let fd = new FormData();\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        fd.append(\"file\", e.target.files[i]);\r\n      }\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API}/api/customer/upload/photocakes?id=${product.id}`,\r\n        data: fd,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"x-customer-token\": customer.token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          if (res.data.success === \"1\") {\r\n            toast.success(\"Images uploaded successfully!\");\r\n            loadCartItems();\r\n          } else toast.error(\"Error uploading images, please try again!\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  /* Setting price on flavour change */\r\n  const fruit = 280;\r\n  const blackForest = 280;\r\n  const coffeeMocha = 290;\r\n  const truffle = 330;\r\n  const chocolateOrange = 330;\r\n  const blueberryChocolate = 330;\r\n  const hazelnut = 580;\r\n  const whiteForest = 290;\r\n  const tiramisu = 430;\r\n  const redVelvetTruffle = 330;\r\n  const oreo = 310;\r\n  const pineapple = 230;\r\n  const strawberry = 250;\r\n  const redVelvet = 280;\r\n  const redVelvetCheeseCream = 480;\r\n  const cookieAndCream = 310;\r\n  const butterscotch = 250;\r\n  const chocolate = 280;\r\n  const chocolateVanilla = 330;\r\n  const blueberry = 310;\r\n  const hazelnutCoffee = 580;\r\n\r\n  const chngFlavour = (e) => {\r\n    let old, newOne;\r\n    /*Setting the old cream + flavour price */\r\n    if (flavour === \"chocolate\") old = chocolate;\r\n    else if (flavour === \"truffle\") old = truffle;\r\n    else if (flavour === \"hazelnut\") old = hazelnut;\r\n    else if (flavour === \"red velvet\") old = redVelvet;\r\n    else if (flavour === \"fruit\") old = fruit;\r\n    else if (flavour === \"coffee mocha\") old = coffeeMocha;\r\n    else if (flavour === \"black forest\") old = blackForest;\r\n    else if (flavour === \"blueberry\") old = blueberry;\r\n    else if (flavour === \"tiramisu\") old = tiramisu;\r\n    else if (flavour === \"butterscotch\") old = butterscotch;\r\n    else if (flavour === \"cookie & cream\") old = cookieAndCream;\r\n    else if (flavour === \"pineapple\") old = pineapple;\r\n    else if (flavour === \"chocolate vanilla\") old = chocolateVanilla;\r\n    else if (flavour === \"oreo\") old = oreo;\r\n    else if (flavour === \"red velvet truffle\") old = redVelvetTruffle;\r\n    else if (flavour === \"white forest\") old = whiteForest;\r\n    else if (flavour === \"strawberry\") old = strawberry;\r\n    else if (flavour === \"red velvet cream cheese\") old = redVelvetCheeseCream;\r\n    else if (flavour === \"hazelnut coffee\") old = hazelnutCoffee;\r\n    else if (flavour === \"blueberry chocolate\") old = blueberryChocolate;\r\n    else if (flavour === \"chocolate orange\") old = chocolateOrange;\r\n\r\n    /*Setting the old cream + flavour price */\r\n    if (e.target.value === \"chocolate\") newOne = chocolate;\r\n    else if (e.target.value === \"truffle\") newOne = truffle;\r\n    else if (e.target.value === \"hazelnut\") newOne = hazelnut;\r\n    else if (e.target.value === \"red velvet\") newOne = redVelvet;\r\n    else if (e.target.value === \"fruit\") newOne = fruit;\r\n    else if (e.target.value === \"coffee mocha\") newOne = coffeeMocha;\r\n    else if (e.target.value === \"black forest\") newOne = blackForest;\r\n    else if (e.target.value === \"blueberry\") newOne = blueberry;\r\n    else if (e.target.value === \"tiramisu\") newOne = tiramisu;\r\n    else if (e.target.value === \"butterscotch\") newOne = butterscotch;\r\n    else if (e.target.value === \"cookie & cream\") newOne = cookieAndCream;\r\n    else if (e.target.value === \"pineapple\") newOne = pineapple;\r\n    else if (e.target.value === \"chocolate vanilla\") newOne = chocolateVanilla;\r\n    else if (e.target.value === \"oreo\") newOne = oreo;\r\n    else if (e.target.value === \"red velvet truffle\") newOne = redVelvetTruffle;\r\n    else if (e.target.value === \"white forest\") newOne = whiteForest;\r\n    else if (e.target.value === \"strawberry\") newOne = strawberry;\r\n    else if (e.target.value === \"red velvet cream cheese\")\r\n      newOne = redVelvetCheeseCream;\r\n    else if (e.target.value === \"hazelnut coffee\") newOne = hazelnutCoffee;\r\n    else if (e.target.value === \"blueberry chocolate\")\r\n      newOne = blueberryChocolate;\r\n    else if (e.target.value === \"chocolate orange\") newOne = chocolateOrange;\r\n\r\n    setDisabled(true);\r\n    changeFlavour(\r\n      product.product_id,\r\n      (discountedPrice / (weight * qty) - old + newOne) * weight * qty,\r\n      e.target.value,\r\n      customer.token\r\n    ).then((res) => {\r\n      setDisabled(false);\r\n    });\r\n    setFlavour(e.target.value);\r\n    cartItems[index] = {\r\n      ...cartItems[index],\r\n      flavour: e.target.value,\r\n      total_price:\r\n        (discountedPrice / (weight * qty) - old + newOne) * weight * qty,\r\n    };\r\n    setCartTotal(\r\n      cartTotal -\r\n        discountedPrice +\r\n        (discountedPrice / (weight * qty) - old + newOne) * weight * qty\r\n    );\r\n    setSubTotal(\r\n      subTotal -\r\n        price +\r\n        (discountedPrice / (weight * qty) - old + newOne) *\r\n          weight *\r\n          qty *\r\n          (100 / (100 - discount))\r\n    );\r\n    setDiscountedPrice(\r\n      (discountedPrice / (weight * qty) - old + newOne) * weight * qty\r\n    );\r\n    setPrice(\r\n      (discountedPrice / (weight * qty) - old + newOne) *\r\n        weight *\r\n        qty *\r\n        (100 / (100 - discount))\r\n    );\r\n  };\r\n\r\n  const incQuantity = () => {\r\n    if (qty < 10) {\r\n      setDisabled(true);\r\n      increaseQuantity(\r\n        product.product_id,\r\n        (discountedPrice / qty) * (qty + 1),\r\n        customer.token\r\n      ).then((res) => {\r\n        setDisabled(false);\r\n      });\r\n      setCartTotal(\r\n        cartTotal - discountedPrice + (discountedPrice / qty) * (qty + 1)\r\n      );\r\n      setSubTotal(\r\n        subTotal -\r\n          price +\r\n          (discountedPrice / qty) * (qty + 1) * (100 / (100 - discount))\r\n      );\r\n      setDiscountedPrice((discountedPrice / qty) * (qty + 1));\r\n      setPrice((discountedPrice / qty) * (qty + 1) * (100 / (100 - discount)));\r\n      setQty(qty + 1);\r\n      cartItems[index] = {\r\n        ...cartItems[index],\r\n        quantity: qty + 1,\r\n        total_price: (discountedPrice / qty) * (qty + 1),\r\n      };\r\n    }\r\n  };\r\n\r\n  const decQuantity = () => {\r\n    if (qty > 1) {\r\n      setDisabled(true);\r\n      decreaseQuantity(\r\n        product.product_id,\r\n        (discountedPrice / qty) * (qty - 1),\r\n        customer.token\r\n      ).then((res) => {\r\n        setDisabled(false);\r\n      });\r\n\r\n      setCartTotal(\r\n        cartTotal - discountedPrice + (discountedPrice / qty) * (qty - 1)\r\n      );\r\n      setSubTotal(\r\n        subTotal -\r\n          price +\r\n          (discountedPrice / qty) * (qty - 1) * (100 / (100 - discount))\r\n      );\r\n      setDiscountedPrice((discountedPrice / qty) * (qty - 1));\r\n      setPrice((discountedPrice / qty) * (qty - 1) * (100 / (100 - discount)));\r\n      setQty(qty - 1);\r\n      cartItems[index] = {\r\n        ...cartItems[index],\r\n        quantity: qty - 1,\r\n        total_price: (discountedPrice / qty) * (qty - 1),\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleCakeStatus = () => {\r\n    setDisabled(true);\r\n    changeCakeType(\r\n      product.product_id,\r\n      discountedPrice,\r\n      checked ? 0 : 1,\r\n      customer.token\r\n    ).then((res) => {\r\n      setDisabled(false);\r\n    });\r\n\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-product-card p-4 mb-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 cart-card-section\">\r\n          <div className=\"car-product-image\">\r\n            {product && product.img && (\r\n              <img\r\n                src={\"https://cakewaale.com\" + product.img}\r\n                alt=\"cake\"\r\n                className=\"cart-image\"\r\n              />\r\n            )}\r\n          </div>\r\n          <span className=\"discounted-price\">\r\n            <strong>₹{Math.round(discountedPrice)}</strong>{\" \"}\r\n          </span>\r\n          <span className=\"original-price\">\r\n            {\" \"}\r\n            <strong>₹{Math.round(price)}</strong>\r\n          </span>\r\n          <br />\r\n          {product.offer > 0 && (\r\n            <span className=\"discount\">\r\n              <strong>{product.offer}% off</strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"col-sm-8 cart-card-section\">\r\n          <div>\r\n            <h5 className=\"d-inline-block\">{product.product_name}</h5>\r\n          </div>\r\n          <label>\r\n            <label className=\"cart-label\">Cake Type</label>\r\n            <br />\r\n            <span className=\"cart-label\">Eggless &nbsp;</span>\r\n            <label className=\"switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={handleCakeStatus}\r\n                checked={checked}\r\n                disabled={disabled}\r\n              />\r\n              <span className=\"slider round\"></span>\r\n            </label>\r\n            <span className=\"cart-label\">&nbsp;&nbsp;Egg</span>\r\n          </label>\r\n          <br />\r\n          <label className=\"cart-label\">Quantity</label>{\" \"}\r\n          <button\r\n            className=\"pointer small-plus-icon\"\r\n            onClick={incQuantity}\r\n            disabled={disabled}\r\n          >\r\n            <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n          <span className=\"\">\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            {qty}\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </span>\r\n          <button\r\n            className=\"pointer small-plus-icon\"\r\n            onClick={decQuantity}\r\n            disabled={disabled}\r\n          >\r\n            <i className=\"fa fa-minus\"></i>\r\n          </button>\r\n          <br />\r\n          <label className=\"cart-label\">Weight</label>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <button\r\n            className=\"pointer small-plus-icon\"\r\n            onClick={increaseWeight}\r\n            disabled={disabled}\r\n          >\r\n            <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n          <span className=\"\">&nbsp;{weight} Pounds&nbsp;</span>\r\n          <button\r\n            className=\"pointer small-plus-icon\"\r\n            onClick={decreaseWeight}\r\n            disabled={disabled}\r\n          >\r\n            <i className=\"fa fa-minus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <label className=\"cart-label\">Select Flavour</label>\r\n          <select\r\n            className=\"form-control\"\r\n            onChange={chngFlavour}\r\n            value={flavour}\r\n            disabled={disabled}\r\n          >\r\n            {flavours.map((item) => (\r\n              <option key={item} value={item}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n          <label className=\"cart-label\">Name on Cake</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              changeName(\r\n                product.product_id,\r\n                discountedPrice,\r\n                e.target.value,\r\n                customer.token\r\n              );\r\n            }}\r\n          />\r\n          <br />\r\n          <label className=\"cart-label\">Additional Info</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={suggestion}\r\n            onChange={(e) => {\r\n              setSuggestion(e.target.value);\r\n              changeSuggestion(\r\n                product.product_id,\r\n                discountedPrice,\r\n                e.target.value,\r\n                customer.token\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <button\r\n            className=\"mt-2 btn my-btn-primary btn-block\"\r\n            onClick={removeItem}\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <button\r\n            className=\"mt-2 btn my-btn-secondary btn-block\"\r\n            onClick={addItemToWishlist}\r\n          >\r\n            Move to Wishlist\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {product.photocake_status && (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mt-3\">\r\n            <label className=\"btn my-btn-primary btn-block\">\r\n              Upload atleast one photo for this cake\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                encType=\"multipart/form-data\"\r\n                multiple\r\n                hidden\r\n                onChange={uploadFiles}\r\n              ></input>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <br />\r\n      {product.photocake_status &&\r\n        product.images.map((item) => (\r\n          <Badge\r\n            count={\"X\"}\r\n            onClick={async () => {\r\n              await axios\r\n                .delete(\r\n                  `${process.env.REACT_APP_API}/api/customer//remove/photocakes?id=${item.id}`,\r\n                  {\r\n                    headers: {\r\n                      \"x-customer-token\": customer.token,\r\n                    },\r\n                  }\r\n                )\r\n                .then((res) => {\r\n                  if (res.data.success === \"1\") loadCartItems();\r\n                })\r\n                .catch((err) => console.log(err));\r\n            }}\r\n            className=\"pointer\"\r\n          >\r\n            <Avatar\r\n              size={100}\r\n              src={\"https://cakewaale.com\" + item.image}\r\n            ></Avatar>\r\n          </Badge>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartProductCard;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CaetgoryCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\Checkout.js",["195","196"],"import CheckoutProductCard from \"../../components/cards/CheckoutProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  getProfile,\r\n  placeOrder,\r\n  getCartDetails,\r\n} from \"../../functions/customer\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport logo from \"../../images/logo.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { checkPromo } from \"../../functions/customer\";\r\nimport Map from \"../../components/Map\";\r\n\r\nconst Checkout = ({ history }) => {\r\n  const [contact, setContact] = useState(\"\");\r\n  const [hNo, setHNo] = useState(\"\");\r\n  const [locality, setLocality] = useState(\"\");\r\n  const [landmark, setLandmark] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [deliveryDate, setDeliveryDate] = useState(\"\");\r\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [promo, setPromo] = useState(\"\");\r\n  const [couponDiscount, setCouponDiscount] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isCodModalVisible, setIsCodModalVisible] = useState(false);\r\n  // const [isContactModalVisible, setIsContactModalVisible] = useState(false);\r\n  const [isPickMyselfModalVisible, setIsPickMyselfModalVisible] =\r\n    useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [range, setRange] = useState(\"0\");\r\n\r\n  const [city, setCity] = useState(\"Dehradun\");\r\n  const [state, setState] = useState(\"Uttarakhand\");\r\n\r\n  const input1 = useRef(null);\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setIsCodModalVisible(false);\r\n    setIsPickMyselfModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setIsCodModalVisible(false);\r\n    setIsPickMyselfModalVisible(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    getCartDetails(customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") setProducts(res.data.cart_items);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  let intended = history.location.state;\r\n  if (!intended || !customer) history.push(\"/\");\r\n\r\n  let total = 0;\r\n  if (customer && customer.cartItems) {\r\n    for (let i = 0; i < customer.cartItems.length; i++) {\r\n      total += customer.cartItems[i].total_price;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProfile(customer.token).then((res) => {\r\n      setHNo(res.data.customer_detail.delivery_houseNo);\r\n      setLocality(res.data.customer_detail.delivery_locality);\r\n      setLandmark(res.data.customer_detail.delivery_landmark);\r\n      setPincode(res.data.customer_detail.delivery_pincode);\r\n      setContact(res.data.customer_detail.contact_one);\r\n      setEmail(res.data.customer_detail.email);\r\n    });\r\n  }, [customer.token]);\r\n\r\n  //razorpay integration\r\n  function loadScript(src) {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n      document.body.appendChild(script);\r\n    });\r\n  }\r\n\r\n  async function displayRazorpay(result) {\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    if (!result) {\r\n      alert(\"Server error. Are you online?\");\r\n      return;\r\n    }\r\n\r\n    // Getting the order details back\r\n    const { amount, order_id } = result.data;\r\n\r\n    const options = {\r\n      key: \"rzp_live_BUrew3klYGQQzr\", // Enter the Key ID generated from the Dashboard\r\n      amount: amount ? amount.toString() : \"\",\r\n      currency: \"INR\",\r\n      name: \"Cakewaale\",\r\n      description: \"Cake  Transaction\",\r\n      image: logo,\r\n      order_id: order_id,\r\n      handler: async function (response) {\r\n        const data = {\r\n          order_id: order_id,\r\n          razorpay_payment_id: response.razorpay_payment_id,\r\n\r\n          razorpay_signature: response.razorpay_signature,\r\n          pickup: paymentMethod === \"1\" ? \"0\" : \"1\",\r\n          delivery_date: deliveryDate + \" \" + deliveryTime + \":00\",\r\n          range: String(range),\r\n          promo: String(\r\n            Math.round((couponDiscount / 100) * (total + range * 10))\r\n          ),\r\n        };\r\n\r\n        await axios.post(\"https://cakewaale.com/api/customer/success\", data, {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        });\r\n        toast.success(\r\n          \"Your order has been successfully placed. Thank you for shopping with us!\"\r\n        );\r\n        dispatch({\r\n          type: \"GET_CART\",\r\n          payload: { ...customer, cartItems: undefined },\r\n        });\r\n\r\n        history.push(\"/\");\r\n      },\r\n      prefill: {\r\n        name: customer.name,\r\n        email: email,\r\n        contact: contact,\r\n      },\r\n      notes: {\r\n        address: \"Cakewaale Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#cb202d\",\r\n      },\r\n    };\r\n\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.on(\"payment.failed\", async function (response) {\r\n      const result = await axios.post(\r\n        \"https://cakewaale.com/api/customer/failure\",\r\n        { order_id },\r\n        {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        }\r\n      );\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n    paymentObject.open();\r\n  }\r\n\r\n  const handleOrder = () => {\r\n    if (!paymentMethod) toast.error(\"Please select payment method\");\r\n    else if (!deliveryDate || !deliveryTime)\r\n      toast.error(\"Please select delivery time and date\");\r\n    else if (!locality && (paymentMethod === \"0\" || paymentMethod === \"1\"))\r\n      toast.error(\"Please mark your delivery location on map\");\r\n    else if (input1.current.value.length !== 10)\r\n      toast.error(\"Please provide your valid contact number\");\r\n    else if (city.toLowerCase() !== \"dehradun\")\r\n      toast.error(\"We are delivering only in Dehradun right now.\");\r\n    else\r\n      placeOrder(\r\n        deliveryDate + \" \" + deliveryTime + \":00\",\r\n        paymentMethod === \"3\" ? \"1\" : paymentMethod,\r\n        String(range),\r\n        String(Math.round((couponDiscount / 100) * (total + range * 10))),\r\n        customer.token\r\n      )\r\n        .then((res) => {\r\n          if (res.data.success === \"1\") {\r\n            if (paymentMethod === \"0\" || paymentMethod === \"2\") {\r\n              toast.success(\r\n                \"Order successfully placed. Thank you for shopping with us!\"\r\n              );\r\n              dispatch({\r\n                type: \"GET_CART\",\r\n                payload: { ...customer, cartItems: undefined },\r\n              });\r\n              history.push(\"/\");\r\n            } else displayRazorpay(res);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const changeAddress = async (\r\n    address,\r\n    area,\r\n    city,\r\n    state,\r\n    pincode,\r\n    lat,\r\n    lon\r\n  ) => {\r\n    await axios\r\n      .put(\r\n        `${process.env.REACT_APP_API}/api/customer/profile/update`,\r\n        {\r\n          address: \"delivery\",\r\n          houseNo: \"0\",\r\n          locality: address,\r\n          landmark: area,\r\n          city,\r\n          state,\r\n          pincode,\r\n          lat,\r\n          lon,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-customer-token\": customer.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") console.log(\"Address Changed\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // const changeContact = async (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   await axios\r\n  //     .put(\r\n  //       `${process.env.REACT_APP_API}/api/customer/profile/update`,\r\n  //       {\r\n  //         contact_one: input1.current.value,\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           \"x-customer-token\": customer.token,\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //     .then((res) => {\r\n  //       if (res.data.success === \"1\") {\r\n  //         toast.success(\"Contact Updated\");\r\n  //         setContact(input1.current.value);\r\n  //         setIsContactModalVisible(false);\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n\r\n  const showCodModal = () => setIsCodModalVisible(true);\r\n\r\n  const showPickMyselfModal = () => setIsPickMyselfModalVisible(true);\r\n\r\n  const ndate =\r\n    new Date().getDate().toString().length === 1\r\n      ? \"0\" + new Date().getDate().toString()\r\n      : new Date().getDate().toString();\r\n  const month =\r\n    (new Date().getMonth() + 1).toString().length === 1\r\n      ? \"0\" + (new Date().getMonth() + 1).toString()\r\n      : (new Date().getMonth() + 1).toString();\r\n\r\n  const minDate = `${new Date().getFullYear()}-${month}-${ndate}`;\r\n\r\n  const applyCoupon = () => {\r\n    checkPromo(promo, customer.token)\r\n      .then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          toast.success(\"Promocode Applied\");\r\n          setCouponDiscount(res.data.discount);\r\n        } else {\r\n          toast.error(\"Invalid promocode\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Change Address\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-4\">\r\n          <form onSubmit={changeAddress}>\r\n            <label>House No.</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={hNo}\r\n              onChange={(e) => setHNo(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Landmark</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>Locality</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <label>City</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            >\r\n              <option value=\"dehradun\">Dehradun</option>\r\n            </select>\r\n            <br />\r\n            <label>State</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            >\r\n              <option value=\"uttarakhand\">Uttarakhand</option>\r\n            </select>\r\n            <br />\r\n            <label>Pincode</label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n            <br />\r\n            <button className=\"btn my-btn-primary btn-block\">\r\n              Update Address\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      {/* <Modal\r\n        title=\"Update your contact number\"\r\n        visible={isContactModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-2\">\r\n          <label>Enter your contact number</label>\r\n          <div class=\"input-group prefix\">\r\n            <span class=\"input-group-addon \">+91</span>\r\n            <input\r\n              type=\"number\"\r\n              ref={input1}\r\n              className=\"form-control\"\r\n              style={{ width: \"100%\" }}\r\n              defaultValue={contact}\r\n            />\r\n          </div>\r\n          <br />\r\n          <button\r\n            className=\"btn my-btn-primary btn-block\"\r\n            onClick={changeContact}\r\n          >\r\n            Update Contact No.\r\n          </button>\r\n        </div>\r\n      </Modal> */}\r\n      <Modal\r\n        title=\"Important Notice\"\r\n        visible={isCodModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-2\">\r\n          <p>\r\n            We are operating from Garhi Cantt and charging a minimal of Rs 10\r\n            per kilometer\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Important Notice\"\r\n        visible={isPickMyselfModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        centered\r\n      >\r\n        <div className=\"px-4 pb-2\">\r\n          {\" \"}\r\n          <p>\r\n            Please take the screenshot of the pickup address: 4L/1 Garhi Cantt,\r\n            near D.D. College, Rajendra Nagar, Ballupur Chowk, Dehradun. Contact\r\n            Number: +91 7253020679\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n      <h2 className=\"section-title\">Checkout</h2>\r\n      <div className=\"conatiner-fluid\">\r\n        <div className=\"row\" style={{ width: \"100%\" }}>\r\n          <div className=\"col-md-8 px-5\">\r\n            <label className=\"checkout-label\">Select payment options</label>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"0\"\r\n              checked={paymentMethod === \"0\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"0\");\r\n                showCodModal();\r\n              }}\r\n            />\r\n            &nbsp; <span className=\"radio-label\">Cash on delivery</span>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"1\"\r\n              checked={paymentMethod === \"1\"}\r\n              onChange={(e) => setPaymentMethod(\"1\")}\r\n            />\r\n            &nbsp;\r\n            <span className=\"radio-label\">\r\n              Pay online and get delivered to specified address\r\n            </span>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"2\"\r\n              checked={paymentMethod === \"2\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"2\");\r\n                showPickMyselfModal();\r\n              }}\r\n            />\r\n            &nbsp;\r\n            <span className=\"radio-label\">\r\n              Pick myself and pay cash at our store\r\n            </span>\r\n            <br />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"payment_method\"\r\n              value=\"3\"\r\n              checked={paymentMethod === \"3\"}\r\n              onChange={(e) => {\r\n                setPaymentMethod(\"3\");\r\n                showPickMyselfModal();\r\n              }}\r\n            />\r\n            &nbsp;\r\n            <span className=\"radio-label\">Pay online and pick myself</span>\r\n            <br />\r\n            <br />\r\n            {/*{\" \"}\r\n                <textarea\r\n                  disabled\r\n                  className=\"form-control\"\r\n                  style={{ resize: \"none\", height: \"100px\", width: \"90%\" }}\r\n                  value={\r\n                    !hNo || !locality || !landmark || !pincode\r\n                      ? \"\"\r\n                      : hNo +\r\n                        \", \" +\r\n                        locality +\r\n                        \", \" +\r\n                        \"Near \" +\r\n                        landmark +\r\n                        \"\\n \" +\r\n                        \"Dehradun, Uttarakhand -\" +\r\n                        pincode\r\n                  }\r\n                ></textarea>\r\n                <br />\r\n                <button className=\"btn my-btn-primary\" onClick={showModal}>\r\n                  Update Address\r\n                </button>{\" \"}\r\n                */}\r\n            {(paymentMethod === \"0\" || paymentMethod === \"1\") && (\r\n              <>\r\n                <label className=\"checkout-label\">\r\n                  Mark your delivery location on map\r\n                </label>\r\n\r\n                <Map\r\n                  center={{ lat: 30.353050987984094, lng: 78.02502274032297 }}\r\n                  height=\"300px\"\r\n                  zoom={15}\r\n                  setRange={setRange}\r\n                  changeAddress={changeAddress}\r\n                  setCity={setCity}\r\n                  setLocality={setLocality}\r\n                />\r\n                <br />\r\n                <br />\r\n              </>\r\n            )}\r\n            {/* <label className=\"checkout-label\">Have promocode?</label>\r\n            <br />\r\n            <input type=\"text\" className=\"form-control\" />\r\n            <br /> */}\r\n            <label className=\"checkout-label\">Provide your Contact No.</label>\r\n            <br />\r\n            <div className=\"input-group prefix\">\r\n              <span className=\"input-group-addon \">+91</span>\r\n              <input\r\n                type=\"number\"\r\n                ref={input1}\r\n                className=\"form-control\"\r\n                style={{ width: \"100%\" }}\r\n                defaultValue={contact}\r\n              />\r\n            </div>\r\n            <br />\r\n            <label className=\"checkout-label\">Select delivery date</label>\r\n            <input\r\n              type=\"date\"\r\n              min={minDate}\r\n              className=\"form-control\"\r\n              onChange={(e) => setDeliveryDate(e.target.value)}\r\n            />\r\n            <br />\r\n            <label className=\"checkout-label\">Select delivery time</label>\r\n            <input\r\n              type=\"time\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setDeliveryTime(e.target.value)}\r\n            />\r\n            {/* {(paymentMethod === \"0\" || paymentMethod === \"1\") && (\r\n              <>\r\n                <p className=\"budget checkout-label\">\r\n                  Select your expected distance from Ballupur Chowk\r\n                </p>\r\n                <div class=\"slidecontainer\">\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={range}\r\n                    className=\"range-slider\"\r\n                    onChange={(e) => setRange(e.target.value)}\r\n                    id=\"myRange\"\r\n                  />\r\n                  <p className=\"text-center\">\r\n                    <strong>{range} kms</strong>\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )} */}\r\n            <br />\r\n            <label className=\"checkout-label\">Have Promocode?</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setPromo(e.target.value)}\r\n            />\r\n            <br />\r\n            <button className=\"btn my-btn-primary\" onClick={applyCoupon}>\r\n              Apply\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-4 mt-5 px-5\">\r\n            <h4 className=\"order-summary-title\">Order Summary</h4>\r\n            <h4 className=\"order-summary-title\">\r\n              ({customer.cartItems ? customer.cartItems.length : 0} items)\r\n            </h4>\r\n            <br />\r\n            {products.length > 0 &&\r\n              products.map((item) => (\r\n                <CheckoutProductCard key={item.product_id} product={item} />\r\n              ))}\r\n            <hr />\r\n            {range !== \"0\" && city.toLowerCase() === \"dehradun\" && (\r\n              <div style={{ width: \"100%\" }}>\r\n                <span className=\"checkout-label\">Delivery Charges</span>\r\n                <span className=\"float-right checkout-label\">\r\n                  <strong>₹{range * 10}</strong>\r\n                </span>\r\n                <br />\r\n\r\n                <span className=\"checkout-label\">\r\n                  <small>\r\n                    Your approximate distance from our store is {range} kms\r\n                  </small>\r\n                </span>\r\n              </div>\r\n            )}\r\n            <br />\r\n            <div style={{ width: \"100%\" }}>\r\n              <span className=\"checkout-label\">\r\n                Total{\" \"}\r\n                {range !== \"0\" && city.toLowerCase() === \"dehradun\" && (\r\n                  <small>(including delivery charges)</small>\r\n                )}\r\n              </span>\r\n              <span className=\"float-right checkout-label\">\r\n                <strong>\r\n                  ₹\r\n                  {range !== \"0\" && city.toLowerCase() === \"dehradun\"\r\n                    ? total + range * 10\r\n                    : total}\r\n                </strong>\r\n              </span>\r\n            </div>\r\n            {couponDiscount > 0 && (\r\n              <>\r\n                <br />\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span className=\"checkout-label\">Promocode Discount</span>\r\n                  <span className=\"float-right checkout-label\">\r\n                    <strong>\r\n                      ₹\r\n                      {Math.round(\r\n                        (couponDiscount / 100) * (total + range * 10)\r\n                      )}\r\n                    </strong>\r\n                  </span>\r\n                </div>\r\n                <hr />\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span className=\"checkout-label\">\r\n                    Total<small>(after applying promocode)</small>\r\n                  </span>\r\n                  <span className=\"float-right checkout-label\">\r\n                    <strong>\r\n                      ₹\r\n                      {Math.round(\r\n                        ((100 - couponDiscount) / 100) * (total + range * 10)\r\n                      )}\r\n                    </strong>\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n            <br />\r\n            <button\r\n              className=\"btn my-btn-primary btn-block\"\r\n              onClick={handleOrder}\r\n            >\r\n              Place Order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\cards\\CheckoutProductCard.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\OngoingOrders.js",["197"],"import { useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getOngoingOrders, cancelOrder } from \"../../functions/customer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst OngoingOrders = ({ history }) => {\r\n  const [ongoingOrders, setOngoingOrders] = useState([]);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  if (!customer) history.push(\"/\");\r\n\r\n  const loadOngoingOrders = () =>\r\n    getOngoingOrders(customer.token)\r\n      .then((res) => {\r\n        if (res.data.Ongoing_Orders) setOngoingOrders(res.data.Ongoing_Orders);\r\n        else setOngoingOrders([]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  useEffect(() => {\r\n    const loadOngoingOrderss = () =>\r\n      getOngoingOrders(customer.token)\r\n        .then((res) => {\r\n          if (res.data.Ongoing_Orders)\r\n            setOngoingOrders(res.data.Ongoing_Orders);\r\n          else setOngoingOrders([]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    loadOngoingOrderss();\r\n  }, []);\r\n\r\n  const cancelOngoingOrder = (order_id, online_status) => {\r\n    if (window.confirm(\"Are you sure that you want to cancel the order?\")) {\r\n      cancelOrder(order_id, customer.token).then((res) => {\r\n        if (res.data.success === \"1\") {\r\n          loadOngoingOrders();\r\n          if (online_status === \"0\") toast.error(\"Order Cancelled\");\r\n          else\r\n            toast.error(\r\n              \"Order Cancelled. Your payment will be refunded within 24 hrs. If payment doesn't get refunded within 24 hrs then contact us at +91-7017554779\"\r\n            );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\">Ongoing Orders</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          {ongoingOrders.length > 0 &&\r\n            ongoingOrders.reverse().map((item) => (\r\n              <div\r\n                className=\"col-md-8 mx-auto mb-5 p-3 order-card col-10\"\r\n                key={item.order_id}\r\n              >\r\n                <h6>\r\n                  <strong>Order Id</strong> : {item.order_id}\r\n                </h6>\r\n                <h6>\r\n                  <strong>Ordered on</strong>: {item.order_date}\r\n                </h6>\r\n                <h6>\r\n                  <strong>Delivery Date</strong>: {item.delivery_date}\r\n                </h6>\r\n                <h6>\r\n                  <strong>Total Items({item.products.length})</strong>\r\n                </h6>\r\n                <ol style={{ fontSize: \"16px\", fontWeight: \"700\" }}>\r\n                  {item.products.map((i) => (\r\n                    <li key={i.product_id} className=\"mb-2\">\r\n                      <img\r\n                        src={\"https://cakewaale.com\" + i.prof_img}\r\n                        width=\"100px\"\r\n                        height=\"80px\"\r\n                        alt=\"cake\"\r\n                      />\r\n                      {i.product_name}({i.weight} pounds) X {i.quantity}\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n                <h6>\r\n                  <strong>Total Bill : ₹{item.total_bill}</strong>\r\n                </h6>\r\n                <button\r\n                  className=\"btn my-btn-primary btn-block\"\r\n                  onClick={() =>\r\n                    cancelOngoingOrder(item.order_id, item.online_status)\r\n                  }\r\n                >\r\n                  Cancel Order\r\n                </button>\r\n              </div>\r\n            ))}\r\n          {ongoingOrders.length === 0 && (\r\n            <div className=\"mb-5 ml-3 pb-5\">\r\n              {\" \"}\r\n              <h3 className=\"text-center\">There are no ongoing orders.</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OngoingOrders;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\customer\\PreviousOrders.js",["198"],"import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPreviousOrders } from \"../../functions/customer\";\r\n\r\nconst PreviousOrders = ({ history }) => {\r\n  const [previousOrders, setPreviousOrders] = useState([]);\r\n\r\n  const { customer } = useSelector((state) => ({ ...state }));\r\n  if (!customer) history.push(\"/\");\r\n  useEffect(() => {\r\n    const loadPreviousOrders = () =>\r\n      getPreviousOrders(customer.token)\r\n        .then((res) => {\r\n          setPreviousOrders(\r\n            res.data.Previous_Orders ? res.data.Previous_Orders : []\r\n          );\r\n        })\r\n        .catch((err) => console.log(err));\r\n    loadPreviousOrders();\r\n  }, []);\r\n  console.log(previousOrders);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\">Previous Orders</h2>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          {previousOrders.length > 0 &&\r\n            previousOrders.map((item) => (\r\n              <div\r\n                className=\"col-md-8 mx-auto col-10 mb-5 p-3 order-card\"\r\n                key={item.order_id}\r\n              >\r\n                <h6>\r\n                  <b>Order Id</b> : {item.order_id}\r\n                </h6>\r\n                <h6>\r\n                  <b>Delivered on</b>: {item.complete_date}\r\n                </h6>\r\n                <h6>\r\n                  <b>Total Items({item.products.length})</b>\r\n                </h6>\r\n                <ol style={{ fontSize: \"14px\", fontWeight: \"700\" }}>\r\n                  {item.products.map((i) => (\r\n                    <li key={i.product_id} className=\"mb-2\">\r\n                      <img\r\n                        src={\"https://cakewaale.com\" + i.prof_img}\r\n                        style={{ borderRadius: \"5px\" }}\r\n                        width=\"100px\"\r\n                        height=\"80px\"\r\n                        alt=\"cake\"\r\n                      />\r\n                      &nbsp;{i.product_name}({i.weight} pounds) X {i.quantity}\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n                <h6>\r\n                  <strong>Total Bill : ₹{item.total_bill}</strong>\r\n                </h6>\r\n              </div>\r\n            ))}\r\n          {previousOrders.length === 0 && (\r\n            <div className=\"mb-5 ml-3 pb-5\">\r\n              {\" \"}\r\n              <h3 className=\"text-center\">There are no previous orders.</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviousOrders;\r\n","C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Search.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\Promocode.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\components\\Map.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\client-config.js",[],"C:\\Users\\ADMIN\\Desktop\\cakewaale\\client\\src\\pages\\GoogleSignupComplete.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":68,"column":6,"nodeType":"205","endLine":68,"endColumn":8,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"204","line":85,"column":6,"nodeType":"205","endLine":85,"endColumn":8,"suggestions":"207"},{"ruleId":"203","severity":1,"message":"208","line":44,"column":6,"nodeType":"205","endLine":44,"endColumn":8,"suggestions":"209"},{"ruleId":"203","severity":1,"message":"210","line":55,"column":6,"nodeType":"205","endLine":55,"endColumn":8,"suggestions":"211"},{"ruleId":"203","severity":1,"message":"208","line":35,"column":6,"nodeType":"205","endLine":35,"endColumn":8,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"208","line":32,"column":6,"nodeType":"205","endLine":32,"endColumn":8,"suggestions":"213"},{"ruleId":"203","severity":1,"message":"204","line":64,"column":6,"nodeType":"205","endLine":64,"endColumn":8,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"204","line":57,"column":6,"nodeType":"205","endLine":57,"endColumn":8,"suggestions":"215"},{"ruleId":"203","severity":1,"message":"216","line":55,"column":6,"nodeType":"205","endLine":55,"endColumn":26,"suggestions":"217"},{"ruleId":"203","severity":1,"message":"218","line":63,"column":6,"nodeType":"205","endLine":63,"endColumn":8,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":171,"column":13,"nodeType":"222","messageId":"223","endLine":171,"endColumn":19},{"ruleId":"203","severity":1,"message":"218","line":29,"column":6,"nodeType":"205","endLine":29,"endColumn":8,"suggestions":"224"},{"ruleId":"203","severity":1,"message":"218","line":20,"column":6,"nodeType":"205","endLine":20,"endColumn":8,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customer' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["228"],["229"],"React Hook useEffect has a missing dependency: 'history.location.search'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["231"],["232"],["233"],["234"],["235"],"React Hook useEffect has missing dependencies: 'discount' and 'product.total_price'. Either include them or remove the dependency array. If 'setDiscountedPrice' needs the current value of 'product.total_price', you can also switch to useReducer instead of useState and read 'product.total_price' in the reducer.",["236"],"React Hook useEffect has a missing dependency: 'customer.token'. Either include it or remove the dependency array.",["237"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar",["238"],["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"243","fix":"247"},{"desc":"243","fix":"248"},{"desc":"240","fix":"249"},{"desc":"240","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"253","fix":"256"},"Update the dependencies array to be: [customer, dispatch]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [history.location.search]",{"range":"260","text":"261"},"Update the dependencies array to be: [customer]",{"range":"262","text":"263"},{"range":"264","text":"261"},{"range":"265","text":"261"},{"range":"266","text":"258"},{"range":"267","text":"258"},"Update the dependencies array to be: [discount, product.product_id, product.total_price]",{"range":"268","text":"269"},"Update the dependencies array to be: [customer.token]",{"range":"270","text":"271"},{"range":"272","text":"271"},{"range":"273","text":"271"},[2798,2800],"[customer, dispatch]",[3248,3250],[1642,1644],"[history.location.search]",[2039,2041],"[customer]",[1223,1225],[1096,1098],[1932,1934],[2095,2097],[1774,1794],"[discount, product.product_id, product.total_price]",[2283,2285],"[customer.token]",[1027,1029],[690,692]]